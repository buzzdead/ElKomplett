{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contacts/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","app/layout/LoadingComponent.tsx","features/catalog/productSearch.tsx","app/components/RadioButtonGroup.tsx","app/components/CheckboxButtons.tsx","app/components/AppPagination.tsx","app/hooks/useProducts.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contacts/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetails.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckBox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckOutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppSelectList.tsx","app/components/AppDropzone.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","i","fetchBasketAsync","createAsyncThunk","_","thunkAPI","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","roles","atob","token","split","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","put","createFormData","item","formData","FormData","promiseAndCatchError","path","catch","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationerror","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","Admin","createProduct","product","updateProduct","deleteProduct","AboutPage","useState","validationErrors","setvalidationErrors","Typography","variant","gutterBottom","ButtonGroup","fullWidth","Button","onClick","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","ProductCard","Card","CardHeader","avatar","Avatar","sx","backgroundColor","charAt","toUpperCase","titleTypographyProps","fontWeight","color","CardMedia","height","backgroundSize","bgcolor","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","size","component","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","LoadingComponent","message","Backdrop","open","invisible","Box","display","justifyContent","alignItems","CircularProgress","position","top","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","value","Paper","mb","TextField","label","onChange","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","Checkbox","indexOf","newChecked","filter","handleChecked","AppPagination","onPageChange","currentPage","totalCount","totalPages","placeContent","Pagination","count","page","e","handlePageChange","useProducts","selectAll","React","sortOptions","columnSpacing","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","useEffect","parseInt","includes","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","settings","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","anchorEl","setAnchorEl","Boolean","handleClose","typography","currentTarget","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","Container","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","some","r","OrderDetails","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","aria-label","total","orderDate","AppTextInput","useController","defaultValue","fieldState","field","multiline","rows","AppCheckBox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","onCardInputchange","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","AppSelectList","InputLabel","Select","index","FormHelperText","AppDropzone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","revokeObjectURL","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","initApp","setDarkMode","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","createRoot","getElementById"],"mappings":"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","file":"static/js/main.d3a0bfdd.chunk.js","sourcesContent":["export interface MetaData {\r\n    currentPage: number\r\n    totalPages: number\r\n    pageSize: number\r\n    totalCount: number\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T\r\n    metaData: MetaData\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items\r\n        this.metaData = metaData\r\n    }\r\n}","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n  }\r\n\r\nexport function currencyFormat(amount: number) {\r\n    return '$' + (amount / 100).toFixed(2)\r\n}","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit'\r\nimport agent from '../../app/api/agent'\r\nimport { Basket } from '../../app/models/basket'\r\nimport { getCookie } from '../../app/util/util'\r\n\r\ninterface BasketState {\r\n  basket: Basket | null\r\n  status: string\r\n}\r\n\r\nconst initialState: BasketState = {\r\n  basket: null,\r\n  status: 'idle',\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n  'basket/fetchBasketAsync',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      return await agent.Basket.get()\r\n    } catch (error: any) {\r\n      return thunkAPI.rejectWithValue({ error: error.data })\r\n    }\r\n  },\r\n  {\r\n    condition: () => {\r\n      if (!getCookie('buyerId')) return false\r\n    },\r\n  },\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<\r\n  Basket,\r\n  { productId: number; quantity?: number }\r\n>('basket/addBasketItemAsync', async ({ productId, quantity = 1 }, thunkAPI) => {\r\n  try {\r\n    return await agent.Basket.addItem(productId, quantity)\r\n  } catch (error: any) {\r\n    return thunkAPI.rejectWithValue({ error: error.data })\r\n  }\r\n})\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<\r\n  void,\r\n  { productId: number; quantity: number; name?: string }\r\n>('basket/removeBasketItemAsync', async ({ productId, quantity }, thunkAPI) => {\r\n  try {\r\n    await agent.Basket.removeItem(productId, quantity)\r\n  } catch (error: any) {\r\n    return thunkAPI.rejectWithValue({ error: error.data })\r\n  }\r\n})\r\n\r\nexport const basketSlice = createSlice({\r\n  name: 'basket',\r\n  initialState,\r\n  reducers: {\r\n    setBasket: (state, action) => {\r\n      state.basket = action.payload\r\n    },\r\n    clearBasket: (state) => {\r\n      state.basket = null\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n      state.status = 'pendingAddItem' + action.meta.arg.productId\r\n    })\r\n    builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n      state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name\r\n    })\r\n    builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n      const { productId, quantity } = action.meta.arg\r\n\r\n      const itemIndex = state.basket?.items.findIndex((i) => i.productId === productId)\r\n      if (itemIndex === -1 || itemIndex === undefined) return\r\n      state.basket!.items[itemIndex].quantity -= quantity\r\n      if (state.basket?.items[itemIndex].quantity === 0) state.basket.items.splice(itemIndex, 1)\r\n      state.status = 'idle'\r\n    })\r\n    builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n      console.log(action.payload)\r\n      state.status = 'idle'\r\n    })\r\n    builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n        state.basket = action.payload\r\n        state.status = 'idle'\r\n      })\r\n      builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n        console.log(action.payload)\r\n        state.status = 'idle'\r\n      })\r\n  },\r\n})\r\n\r\nexport const { setBasket, clearBasket } = basketSlice.actions\r\n","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    'account/signInUser',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data)\r\n            const { basket, ...user } = userDto\r\n            if (basket) thunkAPI.dispatch(setBasket(basket))\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            return user\r\n        }\r\n        catch(error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async (_, thunkAPI) => {\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)))\r\n        try {\r\n            const userDto = await agent.Account.currentUser()\r\n            const { basket, ...user } = userDto\r\n            if (basket) thunkAPI.dispatch(setBasket(basket))\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            return user\r\n        }\r\n        catch(error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if(!localStorage.getItem('user')) return false\r\n        }\r\n    }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState: initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user')\r\n            history.push('/')\r\n        },\r\n        setUser: (state, action) => {\r\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]))\r\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']\r\n            state.user = {...action.payload, roles: typeof(roles) === 'string' ? [roles] : roles}\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null\r\n            localStorage.removeItem('user')\r\n            toast.error('Session expired - please login again')\r\n            history.push('/')\r\n        })\r\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\r\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]))\r\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']\r\n            state.user = {...action.payload, roles: typeof(roles) === 'string' ? [roles] : roles}\r\n        })\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload\r\n        })\r\n    })\r\n})\r\n\r\nexport const { signOut, setUser } = accountSlice.actions","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { IProduct, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean\r\n    filtersLoaded: boolean\r\n    status: string\r\n    brands: string[]\r\n    types: string[]\r\n    productParams: ProductParams\r\n    metaData: MetaData | null\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<IProduct>()\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams()\r\n    params.append('pageNumber', productParams.pageNumber.toString())\r\n    params.append('pageSize', productParams.pageSize.toString())\r\n    params.append('orderBy', productParams.orderBy)\r\n    if(productParams.searchTerm) params.append('searchTerm', productParams.searchTerm)\r\n    if(productParams.brands.length > 0) params.append('brands', productParams.brands.toString())\r\n    if(productParams.types.length > 0) params.append('types', productParams.types.toString())\r\n    return params\r\n    \r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<IProduct[], void, {state: RootState}>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams)\r\n        try{\r\n            const response = await agent.Catalog.list(params)\r\n            thunkAPI.dispatch(setMetaData(response.metaData))\r\n            return response.items\r\n        }\r\n        catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchProductAsync = createAsyncThunk<IProduct, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId, thunkAPI) => {\r\n        try{\r\n            return await agent.Catalog.details(productId)\r\n        }\r\n        catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'catalog/fetchFilters',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters()\r\n        }\r\n        catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: 'name',\r\n        brands: [],\r\n        types: []\r\n    }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: 'idle',\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false\r\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1}\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false\r\n            state.productParams = {...state.productParams, ...action.payload}\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams()\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload\r\n        },\r\n        setProduct: (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload)\r\n            state.productsLoaded = false\r\n        },\r\n        removeProduct: (state, action) => {\r\n            productsAdapter.removeOne(state, action.payload)\r\n            state.productsLoaded = false\r\n        }\r\n     },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts'\r\n        })\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload)\r\n            state.status = 'idle'\r\n            state.productsLoaded = true\r\n        })\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct'\r\n        })\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload)\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action)\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendingFetchFilters'\r\n        })\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands\r\n            state.types = action.payload.types\r\n            state.filtersLoaded = true\r\n        })\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            state.status = 'idle'\r\n            console.log(action.payload)\r\n        })\r\n    })\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog)\r\nexport const {setProductParams, resetProductParams, setMetaData, setPageNumber, setProduct, removeProduct} = catalogSlice.actions","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\n\r\nexport interface CounterState {\r\n    data: number\r\n    title: string\r\n  }\r\n  \r\n  const initialState: CounterState = {\r\n    data: 424,\r\n    title: 'redux toolkit adsf'\r\n  }\r\n\r\n  export const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload\r\n        }\r\n    }\r\n  })\r\n\r\n  export const {increment, decrement} = counterSlice.actions","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { counterSlice } from \"../../features/contacts/counterSlice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import axios, { AxiosError, AxiosResponse } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { history } from '../..'\r\nimport { PaginatedResponse } from '../models/pagination'\r\nimport { store } from '../store/configureStore'\r\n\r\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 500))\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\naxios.defaults.withCredentials = true\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.getState().account.user?.token\r\n  if (token) config.headers.Authorization = `Bearer ${token}`\r\n  return config\r\n})\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === 'development') await sleep()\r\n    const pagination = response.headers['pagination']\r\n    if (pagination) {\r\n      response.data = new PaginatedResponse(response.data, JSON.parse(pagination))\r\n      return response\r\n    }\r\n    return response\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status }: unknown | any = error.response\r\n    switch (status) {\r\n      case 400:\r\n        if (data.errors) {\r\n          const modelStateErrors: string[] = []\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modelStateErrors.push(data.errors[key])\r\n            }\r\n          }\r\n          throw modelStateErrors.flat()\r\n        }\r\n        toast.error(data.title)\r\n        break\r\n      case 401:\r\n        toast.error(data.title || 'Unauthorised')\r\n        break\r\n      case 403:\r\n        toast.error('You are not allowed to do that!')\r\n        break\r\n      case 405:\r\n        toast.error(data.title)\r\n        break\r\n      case 500:\r\n        history.push({\r\n          pathname: '/server-error',\r\n          state: { error: data },\r\n        })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    return Promise.reject(error.response)\r\n  },\r\n)\r\n\r\nconst requests = {\r\n  get: (url: string, params?: URLSearchParams) => axios.get(url, { params }).then(responseBody),\r\n  post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) => axios.put(url).then(responseBody),\r\n  delete: (url: string) => axios.delete(url).then(responseBody),\r\n  postForm: (url: string, data: FormData) =>\r\n    axios\r\n      .post(url, data, {\r\n        headers: { 'Content-type': 'multipart/form-data' },\r\n      })\r\n      .then(responseBody),\r\n  putForm: (url: string, data: FormData) =>\r\n    axios\r\n      .put(url, data, {\r\n        headers: { 'Content-type': 'multipart/form-data' },\r\n      })\r\n      .then(responseBody),\r\n}\r\n\r\nfunction createFormData(item: any) {\r\n  let formData = new FormData()\r\n  for (const key in item) {\r\n    formData.append(key, item[key])\r\n  }\r\n  return formData\r\n}\r\n\r\nconst Admin = {\r\n  createProduct: (product: any) => requests.postForm('products', createFormData(product)),\r\n  updateProduct: (product: any) => requests.putForm('products', createFormData(product)),\r\n  deleteProduct: (id: number) => requests.delete(`products/${id}`),\r\n}\r\n\r\nconst Catalog = {\r\n  list: (params: URLSearchParams) => requests.get('products', params),\r\n  details: (id: number) => requests.get(`products/${id}`),\r\n  fetchFilters: () => requests.get('products/filters'),\r\n}\r\nconst promiseAndCatchError = (path: string) => {\r\n  requests.get(path).catch((error) => console.log(error))\r\n}\r\nconst TestErrors = {\r\n  get400Error: () => promiseAndCatchError('buggy/bad-request'),\r\n  get401Error: () => promiseAndCatchError('buggy/unauthorised'),\r\n  get404Error: () => promiseAndCatchError('buggy/not-found'),\r\n  get500Error: () => promiseAndCatchError('buggy/server-error'),\r\n  getValidationerror: () => requests.get('buggy/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n  get: () => requests.get('basket'),\r\n  addItem: (productId: number, quantity = 1) =>\r\n    requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n  removeItem: (productId: number, quantity = 1) =>\r\n    requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n}\r\n\r\nconst Account = {\r\n  login: (values: any) => requests.post('account/login', values),\r\n  register: (values: any) => requests.post('account/register', values),\r\n  currentUser: () => requests.get('account/currentUser'),\r\n  fetchAddress: () => requests.get('account/savedAddress'),\r\n}\r\n\r\nconst Orders = {\r\n  list: () => requests.get('orders'),\r\n  fetch: (id: number) => requests.get(`/orders/${id}`),\r\n  create: (values: any) => requests.post('orders', values),\r\n}\r\n\r\nconst Payments = {\r\n  createPaymentIntent: () => requests.post('payments', {}),\r\n}\r\nconst agent = {\r\n  Catalog,\r\n  TestErrors,\r\n  Basket,\r\n  Account,\r\n  Orders,\r\n  Payments,\r\n  Admin,\r\n}\r\n\r\nexport default agent\r\n","import { Alert, AlertTitle, Button, ButtonGroup, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { Container } from \"@mui/system\";\r\nimport React, { useState } from 'react'\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setvalidationErrors] = useState<string[]>([])\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationerror()\r\n        .then(() => console.log('should not see this'))\r\n        .catch(error => setvalidationErrors(error))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <Typography variant='h2' gutterBottom>\r\n            Errors for testing purposes\r\n        </Typography>\r\n        <ButtonGroup fullWidth>\r\n            <Button variant='contained' onClick={() => agent.TestErrors.get400Error()}>Test 400 Error</Button>\r\n            <Button variant='contained' onClick={() => agent.TestErrors.get401Error()}>Test 401 Error</Button>\r\n            <Button variant='contained' onClick={() => agent.TestErrors.get404Error()}>Test 404 Error</Button>\r\n            <Button variant='contained' onClick={() => agent.TestErrors.get500Error()}>Test 500 Error</Button>\r\n            <Button variant='contained' onClick={getValidationError}>Test Validation Error</Button>\r\n        </ButtonGroup>\r\n        {validationErrors.length > 0 && \r\n        <Alert severity='error'>\r\n            <AlertTitle>Validation Errors</AlertTitle>\r\n            <List>\r\n                {validationErrors.map(error => (\r\n                    <ListItem key={error}>\r\n                        <ListItemText>{error}</ListItemText>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Alert>\r\n        }\r\n        </Container>\r\n    )\r\n}","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Typography,\r\n} from '@mui/material'\r\nimport { IProduct } from '../../app/models/product'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { currencyFormat } from '../../app/util/util'\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore'\r\nimport { addBasketItemAsync } from '../basket/basketSlice'\r\n\r\ninterface Props {\r\n  product: IProduct\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n  const { status } = useAppSelector(state => state.basket)\r\n  const dispatch = useAppDispatch()\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ backgroundColor: 'green' }}>{product.name.charAt(0).toUpperCase()}</Avatar>\r\n        }\r\n        title={product.name}\r\n        titleTypographyProps={{\r\n          sx: { fontWeight: 'bold', color: 'primary.main' },\r\n        }}\r\n      />\r\n      <CardMedia\r\n        sx={{\r\n          height: 140,\r\n          backgroundSize: 'contain',\r\n          bgcolor: 'primary.light',\r\n        }}\r\n        image={product.pictureUrl}\r\n        title={product.name}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant='h5' color='secondary'>\r\n          {currencyFormat(product.price)}\r\n        </Typography>\r\n        <Typography variant='body2' color='text.secondary'>\r\n          {product.brand} / {product.type}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <LoadingButton loading={status === ('pendingAddItem' + product.id)} onClick={() => dispatch(addBasketItemAsync({productId: product.id}))} size='small'>\r\n          Add to cart\r\n        </LoadingButton>\r\n        <Button component={Link} to={`/catalog/${product.id}`} size='small'>\r\n          View\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from '@mui/material'\r\nimport { IProduct } from '../../app/models/product'\r\nimport React from 'react'\r\nimport ProductCard from './ProductCard'\r\nimport { useAppSelector } from '../../app/store/configureStore'\r\nimport ProductCardSkeleton from './ProductCardSkeleton'\r\n\r\ninterface Props {\r\n  products: IProduct[]\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n  const { productsLoaded } = useAppSelector((state) => state.catalog)\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {products.map((product) => (\r\n        <Grid key={product.id} item xs={4}>\r\n          {!productsLoaded ? <ProductCardSkeleton /> : <ProductCard product={product} />}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  )\r\n}\r\n","import { Backdrop, Box, CircularProgress, Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\ninterface Props {\r\n    message?: string\r\n}\r\n\r\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\r\n    return(\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>{message}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n\r\n}","import { debounce, Paper, TextField } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore'\r\nimport { setProductParams } from './catalogSlice'\r\n\r\nexport default function ProductSearch() {\r\n    const {productParams} = useAppSelector(state => state.catalog)\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({searchTerm: event.target.value}))\r\n    }, 1000)\r\n\r\n  return (\r\n    <Paper sx={{ mb: 2 }}>\r\n      <TextField label='Search products' variant='outlined' fullWidth value={searchTerm || ''} onChange={(event: any) =>{ \r\n        setSearchTerm(event.target.value) \r\n        debouncedSearch(event)}}/>\r\n    </Paper>\r\n  )\r\n}\r\n","import { FormControl, RadioGroup, FormControlLabel, Radio } from '@mui/material'\r\nimport React from 'react'\r\n\r\ninterface Props {\r\n  options: any[]\r\n  onChange: (event: any) => void\r\n  selectedValue: string\r\n}\r\n\r\nexport default function RadioButtonGroup({ options, onChange, selectedValue }: Props) {\r\n  return (\r\n    <FormControl>\r\n      <RadioGroup onChange={onChange} value={selectedValue}>\r\n        {options.map(({ value, label }) => (\r\n          <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  )\r\n}\r\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material'\r\nimport React, { useState } from 'react'\r\n\r\ninterface Props {\r\n    items: string[]\r\n    checked?: string[]\r\n    onChange: (items: string[]) => void\r\n}\r\n\r\nexport default function CheckboxButtons({items, checked, onChange}: Props) {\r\n    const [checkedItems, setCheckedItems] = useState(checked || [])\r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex(item => item === value)\r\n        let newChecked: string[] = []\r\n        if(currentIndex === -1) newChecked = [...checkedItems, value]\r\n        else newChecked = checkedItems.filter(item => item !== value)\r\n        setCheckedItems(newChecked)\r\n        onChange(newChecked)\r\n    }\r\n    return (\r\n        <FormGroup>\r\n            {items.map(item => (\r\n              <FormControlLabel control={<Checkbox checked={checkedItems.indexOf(item) !== -1} onClick={() => handleChecked(item)} />} label={item} key={item} />\r\n            ))}\r\n          </FormGroup>\r\n    )\r\n}","import { Box, Typography, Pagination } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { MetaData } from '../models/pagination'\r\n\r\ninterface Props {\r\n    metaData: MetaData\r\n    onPageChange: (page: number) => void\r\n}\r\n\r\nexport default function AppPagination({metaData, onPageChange}: Props) {\r\n    const {currentPage, totalCount, totalPages, pageSize} = metaData\r\n    const [pageNumber, setPageNumber] = useState(currentPage)\r\n\r\n    function handlePageChange(page: number) {\r\n      setPageNumber(page)\r\n      onPageChange(page)\r\n    }\r\n  return (\r\n    <Box display='flex'  alignItems='center' sx={{placeContent: 'flex-end'}}>\r\n      <Typography>Displaying {(currentPage - 1) * pageSize + 1} - \r\n      {currentPage * pageSize > totalCount \r\n      ? totalCount \r\n      : currentPage * pageSize} of {totalCount} items</Typography>\r\n      <Pagination\r\n        color='secondary'\r\n        size='large'\r\n        count={totalPages}\r\n        page={pageNumber}\r\n        onChange={(e, page) => handlePageChange(page)}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport {\r\n  productSelectors,\r\n  fetchProductsAsync,\r\n  fetchFilters,\r\n} from '../../features/catalog/catalogSlice'\r\nimport { useAppSelector, useAppDispatch } from '../store/configureStore'\r\n\r\nexport default function useProducts() {\r\n  const products = useAppSelector(productSelectors.selectAll)\r\n  const { productsLoaded, filtersLoaded, brands, types, metaData } = useAppSelector(\r\n    (state) => state.catalog,\r\n  )\r\n  const dispatch = useAppDispatch()\r\n\r\n  React.useEffect(() => {\r\n    if (!productsLoaded) dispatch(fetchProductsAsync())\r\n  }, [productsLoaded, dispatch])\r\n\r\n  React.useEffect(() => {\r\n    if (!filtersLoaded) dispatch(fetchFilters())\r\n  }, [dispatch, filtersLoaded])\r\n\r\n  return {\r\n    products,\r\n    productsLoaded,\r\n    filtersLoaded,\r\n    brands,\r\n    types,\r\n    metaData\r\n  }\r\n}\r\n","import {\r\n  Grid,\r\n  Paper,\r\n} from '@mui/material'\r\nimport ProductList from './ProductList'\r\nimport React from 'react'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore'\r\nimport { setPageNumber, setProductParams } from './catalogSlice'\r\nimport ProductSearch from './productSearch'\r\nimport RadioButtonGroup from '../../app/components/RadioButtonGroup'\r\nimport CheckboxButtons from '../../app/components/CheckboxButtons'\r\nimport AppPagination from '../../app/components/AppPagination'\r\nimport useProducts from '../../app/hooks/useProducts'\r\n\r\nconst sortOptions = [\r\n  { value: 'name', label: 'Alphabetical' },\r\n  { value: 'priceDesc', label: 'Price - High to low' },\r\n  { value: 'price', label: 'Price - Low to high' },\r\n]\r\n\r\nexport default function Catalog() {\r\n  const {products, brands, types, filtersLoaded, metaData} = useProducts()\r\n  const { productParams } = useAppSelector((state) => state.catalog)\r\n  const dispatch = useAppDispatch()\r\n\r\n  if(!filtersLoaded) return <LoadingComponent message={'Loading products...'} />\r\n\r\n  return (\r\n    <Grid container columnSpacing={4}>\r\n      <Grid item xs={3}>\r\n        <ProductSearch />\r\n        <Paper sx={{ mb: 2, p: 2}}>\r\n          <RadioButtonGroup selectedValue={productParams.orderBy} options={sortOptions} onChange={(e) => dispatch(setProductParams({orderBy: e.target.value}))}/>\r\n        </Paper>\r\n        <Paper sx={{mb: 2, p: 2}}>\r\n          <CheckboxButtons items={brands} checked={productParams.brands} onChange={(items: string[]) => dispatch(setProductParams({brands: items}))} />\r\n        </Paper>\r\n        <Paper sx={{mb: 2, p: 2}}>\r\n        <CheckboxButtons items={types} checked={productParams.types} onChange={(items: string[]) => dispatch(setProductParams({types: items}))} />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <ProductList products={products} />\r\n      </Grid>\r\n      <Grid item xs={3} />\r\n      <Grid item xs={9} sx={{mb: 2}}>\r\n        {metaData &&\r\n        <AppPagination metaData={metaData} onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))} />\r\n}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import { Button, Divider, Paper, Typography } from '@mui/material'\r\nimport { Container } from '@mui/system'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{height: 400}}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n}","import {\r\n  Divider,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material'\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport React from 'react'\r\nimport NotFound from '../../app/errors/NotFound'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore'\r\nimport { addBasketItemAsync, removeBasketItemAsync } from '../basket/basketSlice'\r\nimport { fetchProductAsync, productSelectors } from './catalogSlice'\r\n\r\nexport default function ProductDetails() {\r\n  const { basket, status } = useAppSelector(state => state.basket)\r\n  const dispatch = useAppDispatch()\r\n  const { id } = useParams<{ id: string }>()\r\n  const product = useAppSelector(state => productSelectors.selectById(state, id))\r\n  const {status: productStatus} = useAppSelector(state => state.catalog)\r\n  const [quantity, setQuantity] = useState(0)\r\n\r\n  const item = basket?.items.find(i => i.productId === product?.id)\r\n\r\n  useEffect(() => {\r\n    if (item) setQuantity(item.quantity)\r\n    if (!product) dispatch(fetchProductAsync(parseInt(id)))\r\n  }, [id, item, dispatch, product])\r\n\r\n  function handleInputChange(event: any) {\r\n    if (event.target.value >= 0) {\r\n      setQuantity(parseInt(event.target.value))\r\n    }\r\n  }\r\n\r\n  function handleUpdateCart() {\r\n    if (!item || quantity > item.quantity) {\r\n      const updatedQuantity = item ? quantity - item.quantity : quantity\r\n      dispatch(addBasketItemAsync({productId: product!.id, quantity: updatedQuantity}))\r\n    } else {\r\n      const updatedQuantity = item.quantity - quantity\r\n      dispatch(removeBasketItemAsync({productId: product!.id, quantity: updatedQuantity }))\r\n    }\r\n  }\r\n\r\n  if (productStatus.includes('pending')) return <LoadingComponent message='Loading product' />\r\n\r\n  if (!product) return <NotFound />\r\n\r\n  return (\r\n    <Grid container spacing={6}>\r\n      <Grid item xs={6}>\r\n        <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Typography variant='h3'>{product.name}</Typography>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Typography variant='h4' color='secondary'>\r\n          {(product.price / 100).toFixed(2)}\r\n        </Typography>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>{product.name}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>{product.description}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell>{product.type}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Brand</TableCell>\r\n                <TableCell>{product.brand}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Quantity in stock</TableCell>\r\n                <TableCell>{product.quantityInStock}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              variant='outlined'\r\n              type='number'\r\n              label='Quantity in Cart'\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              value={quantity}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <LoadingButton\r\n              disabled={(item?.quantity === quantity) || (!item && quantity === 0)}\r\n              loading={status.includes('pending')}\r\n              onClick={handleUpdateCart}\r\n              sx={{ height: '55px' }}\r\n              color='primary'\r\n              size='large'\r\n              variant='contained'\r\n              fullWidth\r\n            >\r\n              {item ? 'Update Quantity' : 'Add to cart'}\r\n            </LoadingButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import { Button, ButtonGroup, Typography } from \"@mui/material\";\r\nimport React from 'react'\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { decrement, increment } from \"./counterSlice\";\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch()\r\n    const {data, title} = useAppSelector((state) => state.counter)\r\n\r\n    return (\r\n        <>\r\n        <Typography variant='h2'>\r\n            {title}\r\n        </Typography>\r\n        <Typography>\r\n            The data is {data}\r\n        </Typography>\r\n        <ButtonGroup>\r\n            <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>\r\n                Decrement\r\n            </Button>\r\n            <Button onClick={() => dispatch(increment(5))} variant='contained' color='primary'>\r\n                Increment\r\n            </Button>\r\n        </ButtonGroup>\r\n        </>\r\n    )\r\n}","import { Box, Typography } from '@mui/material';\r\nimport React from 'react'\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      };\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}}/>\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}}/>\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}}/>\r\n                </div>\r\n                \r\n            </Slider>\r\n            <Box display='flex' justifyContent='center' sx={{p: 4}}>\r\n                <Typography variant='h1'>\r\n                    Welcome to the shop\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import { Button, Fade, Menu, MenuItem } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { signOut } from '../../features/account/accountSlice'\r\nimport { clearBasket } from '../../features/basket/basketSlice'\r\nimport { useAppDispatch, useAppSelector } from '../store/configureStore'\r\n\r\nexport default function SignedInMenu() {\r\n  const dispatch = useAppDispatch()\r\n  const { user } = useAppSelector(state => state.account)\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const open = Boolean(anchorEl)\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color='inherit' sx={{typography: 'h6'}} onClick={handleClick}>{user?.email}</Button>\r\n      <Menu anchorEl={anchorEl} open={open} onClose={handleClose} TransitionComponent={Fade}>\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem component={Link} to='/orders'>My orders</MenuItem>\r\n        <MenuItem onClick={() =>{\r\n           dispatch(signOut())\r\n           dispatch(clearBasket())\r\n           }}>Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n","import { ShoppingCart } from '@mui/icons-material'\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  Switch,\r\n  Toolbar,\r\n  Typography,\r\n} from '@mui/material'\r\nimport React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useAppSelector } from '../store/configureStore'\r\nimport SignedInMenu from './SignedInMenu'\r\n\r\ninterface Props {\r\n  darkMode: boolean\r\n  handleThemeChange: () => void\r\n}\r\n\r\nconst midLinks = [\r\n  {\r\n    title: 'catalog',\r\n    path: '/catalog',\r\n  },\r\n  {\r\n    title: 'about',\r\n    path: '/about',\r\n  },\r\n  {\r\n    title: 'contact',\r\n    path: '/contact',\r\n  },\r\n]\r\n\r\nconst rightLinks = [\r\n  {\r\n    title: 'login',\r\n    path: '/login',\r\n  },\r\n  {\r\n    title: 'register',\r\n    path: '/register',\r\n  },\r\n]\r\n\r\nconst navStyles = {\r\n  color: 'inherit',\r\n  textDecoration: 'none',\r\n  typography: 'h6',\r\n  '&:hover': {\r\n    color: 'grey.500',\r\n  },\r\n  '&.active': {\r\n    color: 'text.secondary',\r\n  },\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n  const { basket } = useAppSelector((state) => state.basket)\r\n  const { user } = useAppSelector((state) => state.account)\r\n  const itemCount = basket && basket.items.reduce((sum, item) => sum + item.quantity, 0)\r\n\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Box display='flex' alignItems='center'>\r\n          <Typography variant='h6' component={NavLink} to='/' exact sx={navStyles}>\r\n            RE-STORE\r\n          </Typography>\r\n          <Switch checked={darkMode} onChange={handleThemeChange} />\r\n        </Box>\r\n        <List sx={{ display: 'flex' }}>\r\n          {midLinks.map(({ title, path }) => (\r\n            <ListItem component={NavLink} to={path} key={path} sx={navStyles}>\r\n              {title.toUpperCase()}\r\n            </ListItem>\r\n          ))}\r\n          {user && user.roles?.includes('Admin') && (\r\n            <ListItem component={NavLink} to={'/inventory'} sx={navStyles}>\r\n              INVENTORY\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        <Box display='flex' alignItems='center'>\r\n          <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\r\n            <Badge badgeContent={itemCount} color='secondary'>\r\n              <ShoppingCart />\r\n            </Badge>\r\n          </IconButton>\r\n          {user ? (\r\n            <SignedInMenu />\r\n          ) : (\r\n            <List sx={{ display: 'flex' }}>\r\n              {rightLinks.map(({ title, path }) => (\r\n                <ListItem component={NavLink} to={path} key={path} sx={navStyles}>\r\n                  {title.toUpperCase()}\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import { Button, Container, Divider, Paper, Typography, Box } from \"@mui/material\"\r\nimport React from 'react'\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory()\r\n    const {state} = useLocation<any>()\r\n    return (\r\n        <Container component={Paper}>\r\n            {state.error && state.error ? (\r\n                <Box>\r\n                <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                <Divider />\r\n                <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </Box>\r\n            ) :\r\n            <Typography variant='h5' gutterBottom>Server error</Typography>\r\n        \r\n    }\r\n    <Button onClick={() => history.push('/catalog')}> Go back to the store </Button>\r\n    </Container>\r\n    )\r\n}","import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from '@mui/material'\r\nimport React from 'react'\r\nimport { useAppSelector } from '../../app/store/configureStore'\r\nimport { currencyFormat } from '../../app/util/util'\r\n\r\ninterface props {\r\n  subtotal?: number\r\n}\r\n\r\nexport default function BasketSummary({subtotal}: props) {\r\n  const { basket } = useAppSelector(state => state.basket)\r\n  if (subtotal === null || subtotal === undefined)\r\n    subtotal = basket?.items.reduce((sum, item) => sum + item.quantity * item.price, 0) ?? 0\r\n  const deliveryFee = subtotal > 10000 ? 0 : 500\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper} variant={'outlined'}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Subtotal</TableCell>\r\n              <TableCell align='right'>{currencyFormat(subtotal)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n              <TableCell align='right'>{currencyFormat(deliveryFee)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Total</TableCell>\r\n              <TableCell align='right'>{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>\r\n                <span style={{ fontStyle: 'italic' }}>\r\n                  *Orders over $100 qualify for free delivery\r\n                </span>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  )\r\n}\r\n","import { Remove, Add, Delete } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Box,\r\n} from '@mui/material'\r\nimport * as React from 'react'\r\nimport { BasketItem } from '../../app/models/basket'\r\nimport { useAppSelector, useAppDispatch } from '../../app/store/configureStore'\r\nimport { currencyFormat } from '../../app/util/util'\r\nimport { removeBasketItemAsync, addBasketItemAsync } from './basketSlice'\r\n\r\ninterface Props {\r\n  items: BasketItem[]\r\n  isBasket?: boolean\r\n}\r\n\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n  const { status } = useAppSelector((state) => state.basket)\r\n  const dispatch = useAppDispatch()\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Product</TableCell>\r\n            <TableCell align='right'>Price</TableCell>\r\n            <TableCell align='center'>Quantity</TableCell>\r\n            <TableCell align='right'>Subtotal</TableCell>\r\n            {isBasket && <TableCell align='right'></TableCell>}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {items.map((item) => (\r\n            <TableRow\r\n              key={item.productId}\r\n              sx={{\r\n                '&:last-child td, &:last-child th': {\r\n                  border: 0,\r\n                },\r\n              }}\r\n            >\r\n              <TableCell component='th' scope='row'>\r\n                <Box display='flex' alignItems='center'>\r\n                  <img\r\n                    src={item.pictureUrl}\r\n                    alt={item.name}\r\n                    style={{\r\n                      height: 50,\r\n                      marginRight: 20,\r\n                    }}\r\n                  />\r\n                  <span>{item.name}</span>\r\n                </Box>\r\n              </TableCell>\r\n              <TableCell align='right'>{currencyFormat(item.price)}</TableCell>\r\n              <TableCell align='center'>\r\n                {isBasket && (\r\n                  <LoadingButton\r\n                    loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                    color='error'\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        removeBasketItemAsync({\r\n                          productId: item.productId,\r\n                          quantity: 1,\r\n                          name: 'rem',\r\n                        }),\r\n                      )\r\n                    }\r\n                  >\r\n                    <Remove />\r\n                  </LoadingButton>\r\n                )}\r\n                {item.quantity}\r\n                {isBasket && (\r\n                  <LoadingButton\r\n                    loading={status === 'pendingAddItem' + item.productId}\r\n                    color='secondary'\r\n                    onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                  >\r\n                    <Add />\r\n                  </LoadingButton>\r\n                )}\r\n              </TableCell>\r\n              <TableCell align='right'>{currencyFormat(item.price * item.quantity)}</TableCell>\r\n              {isBasket && (\r\n                <TableCell align='right'>\r\n                  <LoadingButton\r\n                    loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                    color='error'\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        removeBasketItemAsync({\r\n                          productId: item.productId,\r\n                          quantity: item.quantity,\r\n                          name: 'del',\r\n                        }),\r\n                      )\r\n                    }\r\n                  >\r\n                    <Delete />\r\n                  </LoadingButton>\r\n                </TableCell>\r\n              )}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","import {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAppSelector } from '../../app/store/configureStore'\r\nimport BasketSummary from './BasketSummary'\r\nimport BasketTable from './BasketTable'\r\n\r\nexport default function BasketPage() {\r\n  const { basket } = useAppSelector(state => state.basket)\r\n\r\n  if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\r\n\r\n  return (\r\n    <>\r\n    <BasketTable items={basket.items} />\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n          <Button component={Link} to='/checkout' variant='contained' size='large' fullWidth>\r\n            Checkout\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { FieldValues } from 'react-hook-form/dist/types';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\n\r\nexport default function Login() {\r\n  const history = useHistory()\r\n  const location = useLocation<any>()\r\n  const dispatch = useAppDispatch()\r\n  const {register, handleSubmit, formState: {isSubmitting, errors, isValid}} = useForm({\r\n    mode: 'onTouched'\r\n  })\r\n\r\n  async function submitForm(data: FieldValues) {\r\n    try {\r\n      await dispatch(signInUser(data))\r\n      history.push(location.state?.from?.pathname || '/catalog')\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n      <Container component={Paper} maxWidth=\"sm\" sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Username\"\r\n              autoFocus\r\n              {...register('username', {required: 'Username is required'})}\r\n              error={!!errors.username}\r\n              helperText={errors?.username?.message as string}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              {...register('password', {required: 'Password is required'})}\r\n              error={!!errors.password}\r\n              helperText={errors?.password?.message as string}\r\n            />\r\n            <LoadingButton\r\n              disabled={!isValid}\r\n              loading={isSubmitting}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </LoadingButton>\r\n            <Grid container>\r\n                <Link to=\"/register\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n          </Box>\r\n      </Container>\r\n  );\r\n}","import * as React from 'react'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport TextField from '@mui/material/TextField'\r\nimport Grid from '@mui/material/Grid'\r\nimport Box from '@mui/material/Box'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Container from '@mui/material/Container'\r\nimport { Paper } from '@mui/material'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport agent from '../../app/api/agent'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport default function Register() {\r\n  const history = useHistory()\r\n  const {\r\n    register,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors, isValid },\r\n  } = useForm({\r\n    mode: 'all',\r\n  })\r\n\r\n  function handleApiErrors(errors: any) {\r\n    console.log(errors)\r\n    if (errors) {\r\n      errors.forEach((error: string) => {\r\n        if (error.includes('Password')) {\r\n          setError('password', { message: error })\r\n        } else if (error.includes('Email')) {\r\n          setError('email', { message: error })\r\n        } else if (error.includes('Username')) {\r\n          setError('username', { message: error })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      component={Paper}\r\n      maxWidth='sm'\r\n      sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}\r\n    >\r\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component='h1' variant='h5'>\r\n        Register\r\n      </Typography>\r\n      <Box\r\n        component='form'\r\n        onSubmit={handleSubmit((data) =>\r\n          agent.Account.register(data)\r\n          .then(() => {\r\n            toast.success('Registration successful - you can now login')\r\n            history.push('/login')\r\n          })\r\n          .catch((error) => handleApiErrors(error)),\r\n        )}\r\n        noValidate\r\n        sx={{ mt: 1 }}\r\n      >\r\n        <TextField\r\n          margin='normal'\r\n          fullWidth\r\n          label='Username'\r\n          autoFocus\r\n          {...register('username', { required: 'Username is required' })}\r\n          error={!!errors.username}\r\n          helperText={errors?.username?.message as string}\r\n        />\r\n        <TextField\r\n          margin='normal'\r\n          fullWidth\r\n          label='Email address'\r\n          {...register('email', {\r\n            pattern: {\r\n              value: /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n              message: 'Not a valid email address',\r\n            },\r\n            required: 'Email is required',\r\n          })}\r\n          error={!!errors.email}\r\n          helperText={errors?.email?.message as string}\r\n        />\r\n        <TextField\r\n          margin='normal'\r\n          fullWidth\r\n          label='Password'\r\n          type='password'\r\n          {...register('password', {\r\n            pattern: {\r\n              value:\r\n                /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n              message: 'Not a valid password',\r\n            },\r\n            required: 'Password is required',\r\n          })}\r\n          error={!!errors.password}\r\n          helperText={errors?.password?.message as string}\r\n        />\r\n\r\n        <LoadingButton\r\n          disabled={!isValid}\r\n          loading={isSubmitting}\r\n          type='submit'\r\n          fullWidth\r\n          variant='contained'\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Register\r\n        </LoadingButton>\r\n        <Grid container>\r\n          <Link to='/login'>{'Already have an account? Sign In'}</Link>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { ComponentType } from 'react'\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { useAppSelector } from '../store/configureStore'\r\n\r\ninterface Props extends RouteProps {\r\n  component: ComponentType<RouteComponentProps<any>> | ComponentType<any>\r\n  roles?: string[]\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, roles, ...rest }: Props) {\r\n  const { user } = useAppSelector((state) => state.account)\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!user) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n        if (roles && !roles?.some((r) => user.roles?.includes(r))) {\r\n          toast.error('Not authorised to access this area')\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/catalog',\r\n              }}\r\n            />\r\n          )\r\n        }\r\n        \r\n        return <Component {...props} />\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import { Box, Button, Grid, Typography } from '@mui/material'\r\nimport * as React from 'react'\r\nimport { BasketItem } from '../../app/models/basket'\r\nimport { Order } from '../../app/models/order'\r\nimport BasketSummary from '../basket/BasketSummary'\r\nimport BasketTable from '../basket/BasketTable'\r\n\r\ninterface Props {\r\n    order: Order\r\n    setSelectedOrder: (id: number) => void\r\n}\r\n\r\nexport default function OrderDetails({order, setSelectedOrder}: Props) {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + item.quantity * item.price, 0) ?? 0\r\n\r\n    return (\r\n        <>\r\n        <Box display='flex' justifyContent='space-between' />\r\n            <Typography sx={{p: 2}} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n            <Button onClick={() => setSelectedOrder(0)} sx= {{m: 2}} size='large' variant='contained'>Back to orders</Button>\r\n        <Box/>\r\n        <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n        <Grid container>\r\n            <Grid item xs={6} />\r\n            <Grid item xs={6} /> \r\n            <BasketSummary subtotal={subtotal} />\r\n        </Grid>\r\n        </>\r\n    )\r\n}","import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n} from '@mui/material'\r\nimport * as React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport agent from '../../app/api/agent'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { Order } from '../../app/models/order'\r\nimport { currencyFormat } from '../../app/util/util'\r\nimport OrderDetails from './OrderDetails'\r\n\r\nexport default function Orders() {\r\n  const [orders, setOrders] = useState<Order[] | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [selectedOrderNumber, setSelectedOrderNumber] = useState(0)\r\n\r\n  useEffect(() => {\r\n    agent.Orders.list()\r\n      .then((orders) => setOrders(orders))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setLoading(false))\r\n  })\r\n\r\n  if (loading) return <LoadingComponent message='Loading orders' />\r\n\r\n  if(selectedOrderNumber > 0 ) return (\r\n    <OrderDetails order={orders?.find(o => o.id === selectedOrderNumber)!} setSelectedOrder={setSelectedOrderNumber}/>\r\n  )\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Order number</TableCell>\r\n            <TableCell align='right'>total</TableCell>\r\n            <TableCell align='right'>Order Date</TableCell>\r\n            <TableCell align='right'>Order status</TableCell>\r\n            <TableCell align='right'></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders?.map((order) => (\r\n            <TableRow key={order.id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n              <TableCell component='th' scope='row'>\r\n                {order.id}\r\n              </TableCell>\r\n              <TableCell align='right'>{currencyFormat(order.total)}</TableCell>\r\n              <TableCell align='right'>{order.orderDate.split('T')[0]}</TableCell>\r\n              <TableCell align='right'>{order.orderStatus}</TableCell>\r\n              <TableCell align='right'>\r\n                <Button onClick={() => setSelectedOrderNumber(order.id)}>View</Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","import { TextField } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string\r\n    multiline?: boolean\r\n    rows?: number\r\n    type?: string\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const {fieldState, field} = useController({\r\n        ...props, \r\n        defaultValue: ''\r\n    })\r\n\r\n    return (\r\n        <TextField \r\n        {...props}\r\n        {...field}\r\n        multiline={props.multiline}\r\n        rows={props.rows}\r\n        type={props.type}\r\n        fullWidth\r\n        variant='outlined'\r\n        error={!!fieldState.error}\r\n        helperText={fieldState.error?.message}\r\n        />\r\n    )\r\n}","import { Checkbox, FormControlLabel } from '@mui/material';\r\nimport * as React from 'react'\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string\r\n    disabled: boolean\r\n}\r\n\r\nexport default function AppCheckBox(props: Props) {\r\n    const {field} = useController({...props, defaultValue: false})\r\n\r\n    return (\r\n        <FormControlLabel \r\n            control={\r\n                <Checkbox \r\n                {...field}\r\n                checked={field.value}\r\n                disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n}","import Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport React from 'react'\r\nimport { useFormContext } from 'react-hook-form'\r\nimport AppTextInput from '../../app/components/AppTextInput'\r\nimport AppCheckBox from '../../app/components/AppCheckBox'\r\n\r\nexport default function AddressForm() {\r\n  const { control, formState } = useFormContext()\r\n  return (\r\n    <>\r\n      <Typography variant='h6' gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n          <AppTextInput control={control} name='fullName' label='Full name' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}></Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput control={control} name='address1' label='Address 1' />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput control={control} name='address2' label='Address 2' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='city' label='City' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='state' label='State' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='zip' label='Zipcode' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='country' label='Country' />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppCheckBox\r\n            name='saveAddress'\r\n            label='Save this as the default address'\r\n            disabled={!formState.isDirty}\r\n            control={control}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import { InputBaseComponentProps } from '@mui/material'\r\nimport React, { useImperativeHandle } from 'react'\r\nimport { forwardRef, Ref, useRef } from 'react'\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput(\r\n  { component: Component, ...props }: Props,\r\n  ref: Ref<unknown>,\r\n) {\r\n  const elementRef = useRef<any>()\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    focus: () => elementRef.current.focus(),\r\n  }))\r\n\r\n  return <Component onReady={(element: any) => (elementRef.current = element)} {...props} />\r\n})\r\n","import Typography from '@mui/material/Typography'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport React from 'react'\r\nimport AppTextInput from '../../app/components/AppTextInput'\r\nimport { useFormContext } from 'react-hook-form'\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js'\r\nimport { StripeInput } from './StripeInput'\r\nimport { StripeElementType } from '@stripe/stripe-js'\r\n\r\ninterface Props {\r\n  cardState: {\r\n    elementError: { [key in StripeElementType]?: string }\r\n  }\r\n  onCardInputChange: (event: any) => void\r\n}\r\n\r\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\r\n  const { control } = useFormContext()\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='h6' gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            id='cardNumber'\r\n            label='Card number'\r\n            fullWidth\r\n            autoComplete='cc-number'\r\n            variant='outlined'\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id='expDate'\r\n            label='Expiry date'\r\n            fullWidth\r\n            autoComplete='cc-exp'\r\n            variant='outlined'\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id='cvv'\r\n            label='CVV'\r\n            fullWidth\r\n            autoComplete='cc-csc'\r\n            variant='outlined'\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Grid } from '@mui/material'\r\nimport BasketSummary from '../basket/BasketSummary'\r\nimport { useAppSelector } from '../../app/store/configureStore'\r\nimport BasketTable from '../basket/BasketTable'\r\n\r\nexport default function Review() {\r\n  const { basket } = useAppSelector((state) => state.basket)\r\n  return (\r\n    <>\r\n      <Typography variant='h6' gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket && <BasketTable items={basket.items} isBasket={false} />}\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import * as yup from 'yup'\r\n\r\nexport const validationSchema = [\r\n    \r\n  yup.object({\r\n    fullName: yup.string().required('Full name is required'),\r\n    address1: yup.string().required('Adress line 1 is required'),\r\n    address2: yup.string().required(),\r\n    city: yup.string().required(),\r\n    state: yup.string().required(),\r\n    zip: yup.string().required(),\r\n    country: yup.string().required(),\r\n  }),\r\n\r\n  yup.object(),\r\n\r\n  yup.object({\r\n    nameOnCard: yup.string().required(),\r\n  }),\r\n  \r\n]\r\n","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from '@mui/material'\r\nimport { useEffect, useState } from 'react'\r\nimport AddressForm from './AddressForm'\r\nimport PaymentForm from './PaymentForm'\r\nimport Review from './Review'\r\nimport React from 'react'\r\nimport { FieldValues, FormProvider, useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { validationSchema } from './checkoutValidation'\r\nimport agent from '../../app/api/agent'\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore'\r\nimport { clearBasket } from '../basket/basketSlice'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { StripeElementType } from '@stripe/stripe-js'\r\nimport { CardNumberElement, useElements, useStripe } from '@stripe/react-stripe-js'\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details']\r\n\r\nexport default function CheckoutPage() {\r\n  const [activeStep, setActiveStep] = useState(0)\r\n  const [orderNumber, setOrderNumber] = useState(0)\r\n  const [loading, setLoading] = useState(false)\r\n  const dispatch = useAppDispatch()\r\n  const [cardState, setCardState] = useState<{\r\n    elementError: { [key in StripeElementType]?: string }\r\n  }>({ elementError: {} })\r\n  const [cardComplete, setCardComplete] = useState({\r\n    cardNumber: false,\r\n    cardExpiry: false,\r\n    cardCvc: false,\r\n  })\r\n  const [paymentMessage, setPaymentMessage] = useState('')\r\n  const [paymentSucceeded, setPaymentSucceeded] = useState(false)\r\n  const { basket } = useAppSelector((state) => state.basket)\r\n  const stripe = useStripe()\r\n  const elements = useElements()\r\n\r\n  function onCardInputchange(event: any) {\r\n    setCardState({\r\n      ...cardState,\r\n      elementError: {\r\n        ...cardState.elementError,\r\n        [event.elementType]: event.error?.message,\r\n      },\r\n    })\r\n\r\n    setCardComplete({ ...cardComplete, [event.elementType]: event.complete })\r\n  }\r\n\r\n  function getStepContent(step: number) {\r\n    switch (step) {\r\n      case 0:\r\n        return <AddressForm />\r\n      case 1:\r\n        return <Review />\r\n      case 2:\r\n        return <PaymentForm cardState={cardState} onCardInputChange={onCardInputchange} />\r\n      default:\r\n        throw new Error('Unknown step')\r\n    }\r\n  }\r\n\r\n  const currentValidationSchema = validationSchema[activeStep]\r\n\r\n  const methods = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver(currentValidationSchema),\r\n  })\r\n\r\n  useEffect(() => {\r\n    agent.Account.fetchAddress().then((response) => {\r\n      if (response) {\r\n        methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\r\n      }\r\n    })\r\n  }, [methods])\r\n\r\n  async function submitOrder(data: FieldValues) {\r\n    setLoading(true)\r\n    const { nameOnCard, saveAddress, ...shippingAddress } = data\r\n    if (!stripe || !elements) return\r\n      //stripe is not ready\r\n      try {\r\n        const cardElement = elements?.getElement(CardNumberElement)\r\n        const paymentResult = await stripe?.confirmCardPayment(basket?.clientSecret!, {\r\n          payment_method: {\r\n            card: cardElement!,\r\n            billing_details: {\r\n              name: nameOnCard,\r\n            },\r\n          },\r\n        })\r\n        console.log(paymentResult)\r\n        if (paymentResult?.paymentIntent?.status === 'succeeded') {\r\n          const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress })\r\n          setOrderNumber(orderNumber)\r\n          setPaymentSucceeded(true)\r\n          setPaymentMessage('Thank you - we have received your payment')\r\n          setActiveStep(activeStep + 1)\r\n          dispatch(clearBasket())\r\n          setLoading(false)\r\n        } else {\r\n          setPaymentMessage(paymentResult?.error?.message!)\r\n          setPaymentSucceeded(false)\r\n          setLoading(false)\r\n          setActiveStep(activeStep + 1)\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n        setLoading(false)\r\n      }\r\n  }\r\n\r\n  const handleNext = async (data: FieldValues) => {\r\n    if (activeStep === steps.length - 1) {\r\n      await submitOrder(data)\r\n    } else {\r\n      setActiveStep(activeStep + 1)\r\n    }\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1)\r\n  }\r\n\r\n  function submitDisabled(): boolean {\r\n    if (activeStep === steps.length - 1) {\r\n      return (\r\n        !cardComplete.cardCvc ||\r\n        !cardComplete.cardExpiry ||\r\n        !cardComplete.cardNumber ||\r\n        !methods.formState.isValid\r\n      )\r\n    } else {\r\n      return !methods.formState.isValid\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Paper variant='outlined' sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n        <Typography component='h1' variant='h4' align='center'>\r\n          Checkout\r\n        </Typography>\r\n        <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n          {activeStep === steps.length ? (\r\n            <>\r\n              <Typography variant='h5' gutterBottom>\r\n                {paymentMessage}\r\n              </Typography>\r\n              {paymentSucceeded ? (\r\n                <Typography variant='subtitle1'>\r\n                  Your order number is #{orderNumber}. We have not emailed your order confirmation,\r\n                  and will not send you an update when your order has shipped, fakestore!\r\n                </Typography>\r\n              ) : (\r\n                <Button variant='contained' onClick={handleBack}>\r\n                  Go back and try again\r\n                </Button>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {getStepContent(activeStep)}\r\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                {activeStep !== 0 && (\r\n                  <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n                <LoadingButton\r\n                  loading={loading}\r\n                  disabled={submitDisabled()}\r\n                  variant='contained'\r\n                  type='submit'\r\n                  sx={{ mt: 3, ml: 1 }}\r\n                >\r\n                  {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                </LoadingButton>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </form>\r\n      </Paper>\r\n    </FormProvider>\r\n  )\r\n}\r\n","import { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport * as React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport agent from '../../app/api/agent'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { useAppDispatch } from '../../app/store/configureStore'\r\nimport { setBasket } from '../basket/basketSlice'\r\nimport CheckoutPage from './CheckOutPage'\r\n\r\nconst stripePromise = loadStripe(\r\n  'pk_test_51MX6rJEP2FAJR8soQgZo57KS7wklWRNaBzluWWud8XybhTJsgI0pL69OYAoXCCVwEe1H9UrEvg5Tp1MCm0XdBtCf00CaWltWtJ',\r\n)\r\n\r\nexport default function CheckoutWrapper() {\r\n  const dispatch = useAppDispatch()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    agent.Payments.createPaymentIntent()\r\n      .then((basket) => dispatch(setBasket(basket)))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setLoading(false))\r\n  }, [dispatch])\r\n\r\n  if (loading) return <LoadingComponent message='Loading checkout...' />\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <CheckoutPage />\r\n    </Elements>\r\n  )\r\n}\r\n","import { FormControl, InputLabel, Select, MenuItem, FormHelperText } from '@mui/material'\r\nimport * as React from 'react'\r\nimport { useController, UseControllerProps } from 'react-hook-form'\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string\r\n    items: string[]\r\n}\r\n\r\nexport default function AppSelectList(props: Props) {\r\n    const {fieldState, field} = useController({...props, defaultValue: ''})\r\n  return (\r\n    <FormControl fullWidth error={!!fieldState.error}>\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <Select\r\n        value={field.value}\r\n        label={props.label}\r\n        onChange={field.onChange}\r\n      >\r\n        {props.items.map((item, index) => (\r\n            <MenuItem key={index} value={item}>{item}</MenuItem>\r\n        ))}\r\n      </Select>\r\n      <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n    </FormControl>\r\n  )\r\n}\r\n","import { UploadFile } from '@mui/icons-material'\r\nimport { FormControl, FormHelperText, Typography } from '@mui/material'\r\nimport React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { useController, UseControllerProps } from 'react-hook-form'\r\n\r\ninterface Props extends UseControllerProps {}\r\n\r\nexport default function AppDropzone(props: Props) {\r\n    const {fieldState, field} = useController({...props, defaultValue: null})\r\n\r\n    const dzStyles = {\r\n        display: 'flex',\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        alignItems: 'center',\r\n        height: 200,\r\n        width: 500\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n\r\n  const onDrop = useCallback((acceptedFiles: any[]) => {\r\n    acceptedFiles[0] = Object.assign(acceptedFiles[0], \r\n        {preview: URL.createObjectURL(acceptedFiles[0])})\r\n    field.onChange(acceptedFiles[0])\r\n}, [field])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()}>\r\n     <FormControl style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n        <input {...getInputProps()} />\r\n        <UploadFile sx={{fontSize: '100px'}} />\r\n        <Typography variant='h4'>Drop image here</Typography>\r\n        <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n     </FormControl>\r\n    </div>\r\n  )\r\n}","import * as yup from 'yup';\r\n\r\nexport const validationSchema = yup.object({\r\n    name: yup.string().required(),\r\n    brand: yup.string().required(),\r\n    type: yup.string().required(),\r\n    price: yup.number().required().moreThan(100),\r\n    quantityInStock: yup.number().required().min(0),\r\n    description: yup.string().required(),\r\n    file: yup.mixed().when('pictureUrl', {\r\n        is: (value: string) => !value,\r\n        then: yup.mixed().required('Please provide an image')\r\n    })\r\n})","import { Typography, Grid, Paper, Box, Button } from '@mui/material'\r\nimport { useForm } from 'react-hook-form'\r\nimport AppTextInput from '../../app/components/AppTextInput'\r\nimport * as React from 'react'\r\nimport { IProduct } from '../../app/models/product'\r\nimport { useEffect } from 'react'\r\nimport useProducts from '../../app/hooks/useProducts'\r\nimport AppSelectList from '../../app/components/AppSelectList'\r\nimport AppDropzone from '../../app/components/AppDropzone'\r\nimport { FieldValues } from 'react-hook-form/dist/types'\r\nimport {yupResolver} from '@hookform/resolvers/yup'\r\nimport { validationSchema } from './productValidation'\r\nimport agent from '../../app/api/agent'\r\nimport { useAppDispatch } from '../../app/store/configureStore'\r\nimport { setProduct } from '../catalog/catalogSlice'\r\nimport { LoadingButton } from '@mui/lab'\r\n\r\ninterface Props {\r\n  product?: IProduct\r\n  cancelEdit: () => void\r\n}\r\n\r\nexport default function ProductForm({ product, cancelEdit }: Props) {\r\n  const { control, reset, handleSubmit, watch, formState: {isDirty, isSubmitting} } = useForm({\r\n    resolver: yupResolver(validationSchema)\r\n  })\r\n  const { brands, types } = useProducts()\r\n  const watchFile = watch('file', null)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (product && !watchFile && !isDirty) reset(product)\r\n    return () => {\r\n        if(watchFile) URL.revokeObjectURL(watchFile.preview)\r\n    }\r\n  }, [product, reset, watchFile, isDirty])\r\n\r\n  async function handleSubmitData(data: FieldValues) {\r\n    try {\r\n        let response: IProduct\r\n        if(product) {\r\n            response = await agent.Admin.updateProduct(data)\r\n        } else {\r\n            response = await agent.Admin.createProduct(data)\r\n        }\r\n        dispatch(setProduct(response))\r\n        cancelEdit()\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box component={Paper} sx={{ p: 4 }}>\r\n      <Typography variant='h4' gutterBottom sx={{ mb: 4 }}>\r\n        Product Details\r\n      </Typography>\r\n      <form onSubmit={handleSubmit(handleSubmitData)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <AppTextInput control={control} name='name' label='Product name' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppSelectList control={control} items={brands} name='brand' label='Brand' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppSelectList control={control} items={types} name='type' label='Type' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppTextInput control={control} type='number' name='price' label='Price' />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppTextInput\r\n              control={control}\r\n              type='number'\r\n              name='quantityInStock'\r\n              label='Quantity in Stock'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AppTextInput\r\n              multiline\r\n              rows={4}\r\n              control={control}\r\n              name='description'\r\n              label='Description'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n              <AppDropzone control={control} name='file' />\r\n              {watchFile ? (\r\n                <img src={watchFile.preview} alt='preview' style={{ maxHeight: 200 }} />\r\n              ) : (\r\n                <img src={product?.pictureUrl} alt={product?.name} style={{ maxHeight: 200 }} />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Box display='flex' justifyContent='space-between' sx={{ mt: 3 }}>\r\n          <Button onClick={cancelEdit} variant='contained' color='inherit'>\r\n            Cancel\r\n          </Button>\r\n          <LoadingButton loading={isSubmitting} type='submit' variant='contained' color='success'>\r\n            Submit\r\n          </LoadingButton>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  )\r\n}\r\n","import {\r\n  Typography,\r\n  Button,\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Box,\r\n} from '@mui/material'\r\nimport { Edit, Delete } from '@mui/icons-material'\r\nimport { currencyFormat } from '../../app/util/util'\r\nimport * as React from 'react'\r\nimport useProducts from '../../app/hooks/useProducts'\r\nimport AppPagination from '../../app/components/AppPagination'\r\nimport { useAppDispatch } from '../../app/store/configureStore'\r\nimport { removeProduct, setPageNumber } from '../catalog/catalogSlice'\r\nimport { useState } from 'react'\r\nimport ProductForm from './ProductForm'\r\nimport { IProduct } from '../../app/models/product'\r\nimport agent from '../../app/api/agent'\r\nimport { LoadingButton } from '@mui/lab'\r\n\r\nexport default function Inventory() {\r\n  const { products, metaData } = useProducts()\r\n  const dispatch = useAppDispatch()\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [selectedProduct, setSelectedProduct] = useState<IProduct | undefined>(undefined)\r\n  const [loading, setLoading] = useState(false)\r\n  const [target, setTarget] = useState(0)\r\n\r\n  function handleSelectProduct(product: IProduct) {\r\n    setSelectedProduct(product)\r\n    setEditMode(true)\r\n  }\r\n\r\n  function handleDeleteProduct(id: number) {\r\n    setLoading(true)\r\n    setTarget(id)\r\n    agent.Admin.deleteProduct(id)\r\n      .then(() => dispatch(removeProduct(id)))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setLoading(false))\r\n  }\r\n\r\n  function cancelEdit() {\r\n    if (selectedProduct) setSelectedProduct(undefined)\r\n    setEditMode(false)\r\n  }\r\n\r\n  if (editMode) return <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />\r\n  return (\r\n    <>\r\n      <Box display='flex' justifyContent='space-between'>\r\n        <Typography sx={{ p: 2 }} variant='h4'>\r\n          Inventory\r\n        </Typography>\r\n        <Button onClick={() => setEditMode(true)} sx={{ m: 2 }} size='large' variant='contained'>\r\n          Create\r\n        </Button>\r\n      </Box>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>#</TableCell>\r\n              <TableCell align='left'>Product</TableCell>\r\n              <TableCell align='right'>Price</TableCell>\r\n              <TableCell align='center'>Type</TableCell>\r\n              <TableCell align='center'>Brand</TableCell>\r\n              <TableCell align='center'>Quantity</TableCell>\r\n              <TableCell align='right'></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.map((product) => (\r\n              <TableRow key={product.id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                <TableCell component='th' scope='row'>\r\n                  {product.id}\r\n                </TableCell>\r\n                <TableCell align='left'>\r\n                  <Box display='flex' alignItems='center'>\r\n                    <img\r\n                      src={product.pictureUrl}\r\n                      alt={product.name}\r\n                      style={{ height: 50, marginRight: 20 }}\r\n                    />\r\n                    <span>{product.name}</span>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell align='right'>{currencyFormat(product.price)}</TableCell>\r\n                <TableCell align='center'>{product.type}</TableCell>\r\n                <TableCell align='center'>{product.brand}</TableCell>\r\n                <TableCell align='center'>{product.quantityInStock}</TableCell>\r\n                <TableCell align='right'>\r\n                  <Button onClick={() => handleSelectProduct(product)} startIcon={<Edit />} />\r\n                  <LoadingButton\r\n                    loading={loading && target === product.id}\r\n                    onClick={() => handleDeleteProduct(product.id)}\r\n                    startIcon={<Delete />}\r\n                    color='error'\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {metaData && (\r\n        <Box sx={{ p: 2 }}>\r\n          <AppPagination\r\n            metaData={metaData}\r\n            onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { Container, createTheme, CssBaseline } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport ContactPage from \"../../features/contacts/ContactPage\";\nimport HomePage from \"../../features/home/HomePage\";\nimport Header from \"./Header\";\nimport React from 'react'\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../errors/ServerError\";\nimport NotFound from \"../errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\nimport Inventory from \"../../features/admin/Inventory\";\n\nfunction App() {\n  const dispatch = useAppDispatch()\n  const [loading, setLoading] = useState(true)\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser())\n      await dispatch(fetchBasketAsync())\n    }\n    catch (error) {\n      console.log(error)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false))\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false)\n  const theme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light',\n      background: {\n        default: darkMode ? '#121212' : '#eaeaea'\n      }\n    }\n  })\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode)\n  }\n\n  if (loading) return <LoadingComponent message='Initialising app...' />\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position=\"bottom-right\" hideProgressBar/>\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange}/>\n      <Route exact path='/' component={HomePage}/>\n      <Route path={'/(.+)'} render={() => (\n        <Container sx={{mt: 4}}>\n        <Switch>\n        <Route exact path='/catalog' component={Catalog}/>\n        <Route path='/catalog/:id' component={ProductDetails}/>\n        <Route path='/about' component={AboutPage}/>\n        <Route path='/contact' component={ContactPage}/>\n        <Route path='/server-error' component={ServerError}/>\n        <Route path='/basket' component={BasketPage} />\n        <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n        <PrivateRoute path='/orders' component={Orders} />\n        <PrivateRoute roles={['Admin']} path='/inventory' component={Inventory} />\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <Route component={NotFound}/>\n        </Switch>\n      </Container>\n      )} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store/configureStore\";\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nexport const history = createBrowserHistory();\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\n\nroot.render(\n  <Router history={history}>\n        <Provider store={store}>\n        <App />\n        </Provider>\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}