{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contacts/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","app/layout/LoadingComponent.tsx","features/catalog/productSearch.tsx","app/components/RadioButtonGroup.tsx","app/components/CheckboxButtons.tsx","app/components/AppPagination.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contacts/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetails.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckBox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckOutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","i","fetchBasketAsync","createAsyncThunk","_","thunkAPI","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","token","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","promiseAndCatchError","path","catch","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationerror","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","AboutPage","useState","validationErrors","setvalidationErrors","Typography","variant","gutterBottom","ButtonGroup","fullWidth","Button","onClick","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","ProductCard","product","Card","CardHeader","avatar","Avatar","sx","backgroundColor","charAt","toUpperCase","titleTypographyProps","fontWeight","color","CardMedia","height","backgroundSize","bgcolor","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","size","component","Link","to","ProductCardSkeleton","Grid","item","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","LoadingComponent","message","Backdrop","open","invisible","Box","display","justifyContent","alignItems","CircularProgress","position","top","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","value","Paper","mb","TextField","label","onChange","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","Checkbox","indexOf","newChecked","filter","handleChecked","AppPagination","onPageChange","currentPage","totalCount","totalPages","placeContent","Pagination","count","page","e","sortOptions","selectAll","useEffect","columnSpacing","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","includes","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","settings","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","typography","currentTarget","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","Container","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","OrderDetails","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","aria-label","total","orderDate","split","AppTextInput","useController","defaultValue","fieldState","field","AppCheckBox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","onCardInputchange","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","createRoot","getElementById"],"mappings":"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","file":"static/js/main.05b653f6.chunk.js","sourcesContent":["export interface MetaData {\r\n    currentPage: number\r\n    totalPages: number\r\n    pageSize: number\r\n    totalCount: number\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T\r\n    metaData: MetaData\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items\r\n        this.metaData = metaData\r\n    }\r\n}","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n  }\r\n\r\nexport function currencyFormat(amount: number) {\r\n    return '$' + (amount / 100).toFixed(2)\r\n}","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit'\r\nimport agent from '../../app/api/agent'\r\nimport { Basket } from '../../app/models/basket'\r\nimport { getCookie } from '../../app/util/util'\r\n\r\ninterface BasketState {\r\n  basket: Basket | null\r\n  status: string\r\n}\r\n\r\nconst initialState: BasketState = {\r\n  basket: null,\r\n  status: 'idle',\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n  'basket/fetchBasketAsync',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      return await agent.Basket.get()\r\n    } catch (error: any) {\r\n      return thunkAPI.rejectWithValue({ error: error.data })\r\n    }\r\n  },\r\n  {\r\n    condition: () => {\r\n      if (!getCookie('buyerId')) return false\r\n    },\r\n  },\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<\r\n  Basket,\r\n  { productId: number; quantity?: number }\r\n>('basket/addBasketItemAsync', async ({ productId, quantity = 1 }, thunkAPI) => {\r\n  try {\r\n    return await agent.Basket.addItem(productId, quantity)\r\n  } catch (error: any) {\r\n    return thunkAPI.rejectWithValue({ error: error.data })\r\n  }\r\n})\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<\r\n  void,\r\n  { productId: number; quantity: number; name?: string }\r\n>('basket/removeBasketItemAsync', async ({ productId, quantity }, thunkAPI) => {\r\n  try {\r\n    await agent.Basket.removeItem(productId, quantity)\r\n  } catch (error: any) {\r\n    return thunkAPI.rejectWithValue({ error: error.data })\r\n  }\r\n})\r\n\r\nexport const basketSlice = createSlice({\r\n  name: 'basket',\r\n  initialState,\r\n  reducers: {\r\n    setBasket: (state, action) => {\r\n      state.basket = action.payload\r\n    },\r\n    clearBasket: (state) => {\r\n      state.basket = null\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n      state.status = 'pendingAddItem' + action.meta.arg.productId\r\n    })\r\n    builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n      state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name\r\n    })\r\n    builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n      const { productId, quantity } = action.meta.arg\r\n\r\n      const itemIndex = state.basket?.items.findIndex((i) => i.productId === productId)\r\n      if (itemIndex === -1 || itemIndex === undefined) return\r\n      state.basket!.items[itemIndex].quantity -= quantity\r\n      if (state.basket?.items[itemIndex].quantity === 0) state.basket.items.splice(itemIndex, 1)\r\n      state.status = 'idle'\r\n    })\r\n    builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n      console.log(action.payload)\r\n      state.status = 'idle'\r\n    })\r\n    builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n        state.basket = action.payload\r\n        state.status = 'idle'\r\n      })\r\n      builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n        console.log(action.payload)\r\n        state.status = 'idle'\r\n      })\r\n  },\r\n})\r\n\r\nexport const { setBasket, clearBasket } = basketSlice.actions\r\n","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    'account/signInUser',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data)\r\n            const { basket, ...user } = userDto\r\n            if (basket) thunkAPI.dispatch(setBasket(basket))\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            return user\r\n        }\r\n        catch(error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async (_, thunkAPI) => {\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)))\r\n        try {\r\n            const userDto = await agent.Account.currentUser()\r\n            const { basket, ...user } = userDto\r\n            if (basket) thunkAPI.dispatch(setBasket(basket))\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            return user\r\n        }\r\n        catch(error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if(!localStorage.getItem('user')) return false\r\n        }\r\n    }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState: initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user')\r\n            history.push('/')\r\n        },\r\n        setUser: (state, action) => {\r\n            state.user = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null\r\n            localStorage.removeItem('user')\r\n            toast.error('Session expired - please login again')\r\n            history.push('/')\r\n        })\r\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\r\n            state.user = action.payload\r\n        })\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload\r\n        })\r\n    })\r\n})\r\n\r\nexport const { signOut, setUser } = accountSlice.actions","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { IProduct, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean\r\n    filtersLoaded: boolean\r\n    status: string\r\n    brands: string[]\r\n    types: string[]\r\n    productParams: ProductParams\r\n    metaData: MetaData | null\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<IProduct>()\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams()\r\n    params.append('pageNumber', productParams.pageNumber.toString())\r\n    params.append('pageSize', productParams.pageSize.toString())\r\n    params.append('orderBy', productParams.orderBy)\r\n    if(productParams.searchTerm) params.append('searchTerm', productParams.searchTerm)\r\n    if(productParams.brands.length > 0) params.append('brands', productParams.brands.toString())\r\n    if(productParams.types.length > 0) params.append('types', productParams.types.toString())\r\n    return params\r\n    \r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<IProduct[], void, {state: RootState}>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams)\r\n        try{\r\n            const response = await agent.Catalog.list(params)\r\n            thunkAPI.dispatch(setMetaData(response.metaData))\r\n            return response.items\r\n        }\r\n        catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchProductAsync = createAsyncThunk<IProduct, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId, thunkAPI) => {\r\n        try{\r\n            return await agent.Catalog.details(productId)\r\n        }\r\n        catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'catalog/fetchFilters',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters()\r\n        }\r\n        catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: 'name',\r\n        brands: [],\r\n        types: []\r\n    }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: 'idle',\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false\r\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1}\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false\r\n            state.productParams = {...state.productParams, ...action.payload}\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams()\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts'\r\n        })\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload)\r\n            state.status = 'idle'\r\n            state.productsLoaded = true\r\n        })\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct'\r\n        })\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload)\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action)\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendingFetchFilters'\r\n        })\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands\r\n            state.types = action.payload.types\r\n            state.filtersLoaded = true\r\n        })\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            state.status = 'idle'\r\n            console.log(action.payload)\r\n        })\r\n    })\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog)\r\nexport const {setProductParams, resetProductParams, setMetaData, setPageNumber} = catalogSlice.actions","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\n\r\nexport interface CounterState {\r\n    data: number\r\n    title: string\r\n  }\r\n  \r\n  const initialState: CounterState = {\r\n    data: 424,\r\n    title: 'redux toolkit adsf'\r\n  }\r\n\r\n  export const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload\r\n        }\r\n    }\r\n  })\r\n\r\n  export const {increment, decrement} = counterSlice.actions","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { counterSlice } from \"../../features/contacts/counterSlice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import axios, { AxiosError, AxiosResponse } from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { history } from '../..';\r\nimport { PaginatedResponse } from '../models/pagination';\r\nimport { store } from '../store/configureStore';\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500))\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n    return config\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if(process.env.NODE_ENV === 'development') await sleep()\r\n    const pagination = response.headers['pagination']\r\n    if(pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination))\r\n        return response\r\n    }\r\n    return response\r\n}, (error: AxiosError) => {\r\n    const {data, status}: unknown | any = error.response;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = []\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat()\r\n            }\r\n            toast.error(data.title)\r\n            break;\r\n        case 401:\r\n            toast.error(data.title || 'Unauthorised')\r\n            break\r\n        case 405:\r\n            toast.error(data.title)\r\n            break\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: {error: data}\r\n            \r\n            });\r\n            break\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response)\r\n})\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody)\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get('products/filters')\r\n}\r\nconst promiseAndCatchError = (path: string) => {\r\n    requests.get(path).catch(error => console.log(error))\r\n}\r\nconst TestErrors = {\r\n    get400Error: () => promiseAndCatchError('buggy/bad-request'),\r\n    get401Error: () => promiseAndCatchError('buggy/unauthorised'),\r\n    get404Error: () => promiseAndCatchError('buggy/not-found'),\r\n    get500Error: () => promiseAndCatchError('buggy/server-error'),\r\n    getValidationerror: () => requests.get('buggy/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n}\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post('account/login', values),\r\n    register: (values: any) => requests.post('account/register', values),\r\n    currentUser: () => requests.get('account/currentUser'),\r\n    fetchAddress: () => requests.get('account/savedAddress')\r\n}\r\n\r\nconst Orders = {\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: number) => requests.get(`/orders/${id}`),\r\n    create: (values: any) => requests.post('orders', values)\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post('payments', {})\r\n}\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments\r\n}\r\n\r\nexport default agent","import { Alert, AlertTitle, Button, ButtonGroup, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { Container } from \"@mui/system\";\r\nimport React, { useState } from 'react'\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setvalidationErrors] = useState<string[]>([])\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationerror()\r\n        .then(() => console.log('should not see this'))\r\n        .catch(error => setvalidationErrors(error))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <Typography variant='h2' gutterBottom>\r\n            Errors for testing purposes\r\n        </Typography>\r\n        <ButtonGroup fullWidth>\r\n            <Button variant='contained' onClick={() => agent.TestErrors.get400Error()}>Test 400 Error</Button>\r\n            <Button variant='contained' onClick={() => agent.TestErrors.get401Error()}>Test 401 Error</Button>\r\n            <Button variant='contained' onClick={() => agent.TestErrors.get404Error()}>Test 404 Error</Button>\r\n            <Button variant='contained' onClick={() => agent.TestErrors.get500Error()}>Test 500 Error</Button>\r\n            <Button variant='contained' onClick={getValidationError}>Test Validation Error</Button>\r\n        </ButtonGroup>\r\n        {validationErrors.length > 0 && \r\n        <Alert severity='error'>\r\n            <AlertTitle>Validation Errors</AlertTitle>\r\n            <List>\r\n                {validationErrors.map(error => (\r\n                    <ListItem key={error}>\r\n                        <ListItemText>{error}</ListItemText>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Alert>\r\n        }\r\n        </Container>\r\n    )\r\n}","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Typography,\r\n} from '@mui/material'\r\nimport { IProduct } from '../../app/models/product'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { currencyFormat } from '../../app/util/util'\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore'\r\nimport { addBasketItemAsync } from '../basket/basketSlice'\r\n\r\ninterface Props {\r\n  product: IProduct\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n  const { status } = useAppSelector(state => state.basket)\r\n  const dispatch = useAppDispatch()\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ backgroundColor: 'green' }}>{product.name.charAt(0).toUpperCase()}</Avatar>\r\n        }\r\n        title={product.name}\r\n        titleTypographyProps={{\r\n          sx: { fontWeight: 'bold', color: 'primary.main' },\r\n        }}\r\n      />\r\n      <CardMedia\r\n        sx={{\r\n          height: 140,\r\n          backgroundSize: 'contain',\r\n          bgcolor: 'primary.light',\r\n        }}\r\n        image={product.pictureUrl}\r\n        title={product.name}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant='h5' color='secondary'>\r\n          {currencyFormat(product.price)}\r\n        </Typography>\r\n        <Typography variant='body2' color='text.secondary'>\r\n          {product.brand} / {product.type}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <LoadingButton loading={status === ('pendingAddItem' + product.id)} onClick={() => dispatch(addBasketItemAsync({productId: product.id}))} size='small'>\r\n          Add to cart\r\n        </LoadingButton>\r\n        <Button component={Link} to={`/catalog/${product.id}`} size='small'>\r\n          View\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from '@mui/material'\r\nimport { IProduct } from '../../app/models/product'\r\nimport React from 'react'\r\nimport ProductCard from './ProductCard'\r\nimport { useAppSelector } from '../../app/store/configureStore'\r\nimport ProductCardSkeleton from './ProductCardSkeleton'\r\n\r\ninterface Props {\r\n  products: IProduct[]\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n  const { productsLoaded } = useAppSelector((state) => state.catalog)\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {products.map((product) => (\r\n        <Grid key={product.id} item xs={4}>\r\n          {!productsLoaded ? <ProductCardSkeleton /> : <ProductCard product={product} />}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  )\r\n}\r\n","import { Backdrop, Box, CircularProgress, Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\ninterface Props {\r\n    message?: string\r\n}\r\n\r\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\r\n    return(\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>{message}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n\r\n}","import { debounce, Paper, TextField } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore'\r\nimport { setProductParams } from './catalogSlice'\r\n\r\nexport default function ProductSearch() {\r\n    const {productParams} = useAppSelector(state => state.catalog)\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({searchTerm: event.target.value}))\r\n    }, 1000)\r\n\r\n  return (\r\n    <Paper sx={{ mb: 2 }}>\r\n      <TextField label='Search products' variant='outlined' fullWidth value={searchTerm || ''} onChange={(event: any) =>{ \r\n        setSearchTerm(event.target.value) \r\n        debouncedSearch(event)}}/>\r\n    </Paper>\r\n  )\r\n}\r\n","import { FormControl, RadioGroup, FormControlLabel, Radio } from '@mui/material'\r\nimport React from 'react'\r\n\r\ninterface Props {\r\n  options: any[]\r\n  onChange: (event: any) => void\r\n  selectedValue: string\r\n}\r\n\r\nexport default function RadioButtonGroup({ options, onChange, selectedValue }: Props) {\r\n  return (\r\n    <FormControl>\r\n      <RadioGroup onChange={onChange} value={selectedValue}>\r\n        {options.map(({ value, label }) => (\r\n          <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  )\r\n}\r\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material'\r\nimport React, { useState } from 'react'\r\n\r\ninterface Props {\r\n    items: string[]\r\n    checked?: string[]\r\n    onChange: (items: string[]) => void\r\n}\r\n\r\nexport default function CheckboxButtons({items, checked, onChange}: Props) {\r\n    const [checkedItems, setCheckedItems] = useState(checked || [])\r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex(item => item === value)\r\n        let newChecked: string[] = []\r\n        if(currentIndex === -1) newChecked = [...checkedItems, value]\r\n        else newChecked = checkedItems.filter(item => item !== value)\r\n        setCheckedItems(newChecked)\r\n        onChange(newChecked)\r\n    }\r\n    return (\r\n        <FormGroup>\r\n            {items.map(item => (\r\n              <FormControlLabel control={<Checkbox checked={checkedItems.indexOf(item) !== -1} onClick={() => handleChecked(item)} />} label={item} key={item} />\r\n            ))}\r\n          </FormGroup>\r\n    )\r\n}","import { Box, Typography, Pagination } from '@mui/material'\r\nimport React from 'react'\r\nimport { MetaData } from '../models/pagination'\r\n\r\ninterface Props {\r\n    metaData: MetaData\r\n    onPageChange: (page: number) => void\r\n}\r\n\r\nexport default function AppPagination({metaData, onPageChange}: Props) {\r\n    const {currentPage, totalCount, totalPages, pageSize} = metaData\r\n  return (\r\n    <Box display='flex'  alignItems='center' sx={{placeContent: 'flex-end'}}>\r\n      <Typography>Displaying {(currentPage - 1) * pageSize + 1} - \r\n      {currentPage * pageSize > totalCount \r\n      ? totalCount \r\n      : currentPage * pageSize} of {totalCount} items</Typography>\r\n      <Pagination\r\n        color='secondary'\r\n        size='large'\r\n        count={totalPages}\r\n        page={currentPage}\r\n        onChange={(e, page) => onPageChange(page)}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n","import {\r\n  Grid,\r\n  Paper,\r\n} from '@mui/material'\r\nimport { useEffect } from 'react'\r\nimport ProductList from './ProductList'\r\nimport React from 'react'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore'\r\nimport { fetchFilters, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from './catalogSlice'\r\nimport ProductSearch from './productSearch'\r\nimport RadioButtonGroup from '../../app/components/RadioButtonGroup'\r\nimport CheckboxButtons from '../../app/components/CheckboxButtons'\r\nimport AppPagination from '../../app/components/AppPagination'\r\n\r\nconst sortOptions = [\r\n  { value: 'name', label: 'Alphabetical' },\r\n  { value: 'priceDesc', label: 'Price - High to low' },\r\n  { value: 'price', label: 'Price - Low to high' },\r\n]\r\n\r\nexport default function Catalog() {\r\n  const products = useAppSelector(productSelectors.selectAll)\r\n  const { productsLoaded, filtersLoaded, brands, types, productParams, metaData } = useAppSelector((state) => state.catalog)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!productsLoaded) dispatch(fetchProductsAsync())\r\n  }, [productsLoaded, dispatch])\r\n\r\n  useEffect(() => {\r\n    if (!filtersLoaded) dispatch(fetchFilters())\r\n  }, [dispatch, filtersLoaded])\r\n\r\n  if(!filtersLoaded) return <LoadingComponent message={'Loading products...'} />\r\n\r\n  return (\r\n    <Grid container columnSpacing={4}>\r\n      <Grid item xs={3}>\r\n        <ProductSearch />\r\n        <Paper sx={{ mb: 2, p: 2}}>\r\n          <RadioButtonGroup selectedValue={productParams.orderBy} options={sortOptions} onChange={(e) => dispatch(setProductParams({orderBy: e.target.value}))}/>\r\n        </Paper>\r\n        <Paper sx={{mb: 2, p: 2}}>\r\n          <CheckboxButtons items={brands} checked={productParams.brands} onChange={(items: string[]) => dispatch(setProductParams({brands: items}))} />\r\n        </Paper>\r\n        <Paper sx={{mb: 2, p: 2}}>\r\n        <CheckboxButtons items={types} checked={productParams.types} onChange={(items: string[]) => dispatch(setProductParams({types: items}))} />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <ProductList products={products} />\r\n      </Grid>\r\n      <Grid item xs={3} />\r\n      <Grid item xs={9} sx={{mb: 2}}>\r\n        {metaData &&\r\n        <AppPagination metaData={metaData} onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))} />\r\n}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import { Button, Divider, Paper, Typography } from '@mui/material'\r\nimport { Container } from '@mui/system'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{height: 400}}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n}","import {\r\n  Divider,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material'\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport React from 'react'\r\nimport NotFound from '../../app/errors/NotFound'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore'\r\nimport { addBasketItemAsync, removeBasketItemAsync } from '../basket/basketSlice'\r\nimport { fetchProductAsync, productSelectors } from './catalogSlice'\r\n\r\nexport default function ProductDetails() {\r\n  const { basket, status } = useAppSelector(state => state.basket)\r\n  const dispatch = useAppDispatch()\r\n  const { id } = useParams<{ id: string }>()\r\n  const product = useAppSelector(state => productSelectors.selectById(state, id))\r\n  const {status: productStatus} = useAppSelector(state => state.catalog)\r\n  const [quantity, setQuantity] = useState(0)\r\n\r\n  const item = basket?.items.find(i => i.productId === product?.id)\r\n\r\n  useEffect(() => {\r\n    if (item) setQuantity(item.quantity)\r\n    if (!product) dispatch(fetchProductAsync(parseInt(id)))\r\n  }, [id, item, dispatch, product])\r\n\r\n  function handleInputChange(event: any) {\r\n    if (event.target.value >= 0) {\r\n      setQuantity(parseInt(event.target.value))\r\n    }\r\n  }\r\n\r\n  function handleUpdateCart() {\r\n    if (!item || quantity > item.quantity) {\r\n      const updatedQuantity = item ? quantity - item.quantity : quantity\r\n      dispatch(addBasketItemAsync({productId: product!.id, quantity: updatedQuantity}))\r\n    } else {\r\n      const updatedQuantity = item.quantity - quantity\r\n      dispatch(removeBasketItemAsync({productId: product!.id, quantity: updatedQuantity }))\r\n    }\r\n  }\r\n\r\n  if (productStatus.includes('pending')) return <LoadingComponent message='Loading product' />\r\n\r\n  if (!product) return <NotFound />\r\n\r\n  return (\r\n    <Grid container spacing={6}>\r\n      <Grid item xs={6}>\r\n        <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Typography variant='h3'>{product.name}</Typography>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Typography variant='h4' color='secondary'>\r\n          {(product.price / 100).toFixed(2)}\r\n        </Typography>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>{product.name}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>{product.description}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell>{product.type}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Brand</TableCell>\r\n                <TableCell>{product.brand}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Quantity in stock</TableCell>\r\n                <TableCell>{product.quantityInStock}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              variant='outlined'\r\n              type='number'\r\n              label='Quantity in Cart'\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              value={quantity}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <LoadingButton\r\n              disabled={(item?.quantity === quantity) || (!item && quantity === 0)}\r\n              loading={status.includes('pending')}\r\n              onClick={handleUpdateCart}\r\n              sx={{ height: '55px' }}\r\n              color='primary'\r\n              size='large'\r\n              variant='contained'\r\n              fullWidth\r\n            >\r\n              {item ? 'Update Quantity' : 'Add to cart'}\r\n            </LoadingButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import { Button, ButtonGroup, Typography } from \"@mui/material\";\r\nimport React from 'react'\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { decrement, increment } from \"./counterSlice\";\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch()\r\n    const {data, title} = useAppSelector((state) => state.counter)\r\n\r\n    return (\r\n        <>\r\n        <Typography variant='h2'>\r\n            {title}\r\n        </Typography>\r\n        <Typography>\r\n            The data is {data}\r\n        </Typography>\r\n        <ButtonGroup>\r\n            <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>\r\n                Decrement\r\n            </Button>\r\n            <Button onClick={() => dispatch(increment(5))} variant='contained' color='primary'>\r\n                Increment\r\n            </Button>\r\n        </ButtonGroup>\r\n        </>\r\n    )\r\n}","import { Box, Typography } from '@mui/material';\r\nimport React from 'react'\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      };\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}}/>\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}}/>\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}}/>\r\n                </div>\r\n                \r\n            </Slider>\r\n            <Box display='flex' justifyContent='center' sx={{p: 4}}>\r\n                <Typography variant='h1'>\r\n                    Welcome to the shop\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import { Button, Fade, Menu, MenuItem } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { signOut } from '../../features/account/accountSlice'\r\nimport { clearBasket } from '../../features/basket/basketSlice'\r\nimport { useAppDispatch, useAppSelector } from '../store/configureStore'\r\n\r\nexport default function SignedInMenu() {\r\n  const dispatch = useAppDispatch()\r\n  const { user } = useAppSelector(state => state.account)\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n  const open = Boolean(anchorEl)\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color='inherit' sx={{typography: 'h6'}} onClick={handleClick}>{user?.email}</Button>\r\n      <Menu anchorEl={anchorEl} open={open} onClose={handleClose} TransitionComponent={Fade}>\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem component={Link} to='/orders'>My orders</MenuItem>\r\n        <MenuItem onClick={() =>{\r\n           dispatch(signOut())\r\n           dispatch(clearBasket())\r\n           }}>Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n","import { ShoppingCart } from '@mui/icons-material'\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  Switch,\r\n  Toolbar,\r\n  Typography,\r\n} from '@mui/material'\r\nimport React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useAppSelector } from '../store/configureStore'\r\nimport SignedInMenu from './SignedInMenu'\r\n\r\ninterface Props {\r\n  darkMode: boolean\r\n  handleThemeChange: () => void\r\n}\r\n\r\nconst midLinks = [\r\n  {\r\n    title: 'catalog',\r\n    path: '/catalog',\r\n  },\r\n  {\r\n    title: 'about',\r\n    path: '/about',\r\n  },\r\n  {\r\n    title: 'contact',\r\n    path: '/contact',\r\n  },\r\n]\r\n\r\nconst rightLinks = [\r\n  {\r\n    title: 'login',\r\n    path: '/login',\r\n  },\r\n  {\r\n    title: 'register',\r\n    path: '/register',\r\n  },\r\n]\r\n\r\nconst navStyles = {\r\n  color: 'inherit',\r\n  textDecoration: 'none',\r\n  typography: 'h6',\r\n  '&:hover': {\r\n    color: 'grey.500',\r\n  },\r\n  '&.active': {\r\n    color: 'text.secondary',\r\n  },\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n  const { basket } = useAppSelector((state) => state.basket)\r\n  const { user } = useAppSelector((state) => state.account)\r\n  const itemCount = basket && basket.items.reduce((sum, item) => sum + item.quantity, 0)\r\n\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Box display='flex' alignItems='center'>\r\n          <Typography variant='h6' component={NavLink} to='/' exact sx={navStyles}>\r\n            RE-STORE\r\n          </Typography>\r\n          <Switch checked={darkMode} onChange={handleThemeChange} />\r\n        </Box>\r\n        <List sx={{ display: 'flex' }}>\r\n          {midLinks.map(({ title, path }) => (\r\n            <ListItem component={NavLink} to={path} key={path} sx={navStyles}>\r\n              {title.toUpperCase()}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Box display='flex' alignItems='center'>\r\n          <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\r\n            <Badge badgeContent={itemCount} color='secondary'>\r\n              <ShoppingCart />\r\n            </Badge>\r\n          </IconButton>\r\n          {user ? (\r\n            <SignedInMenu />\r\n          ) : (\r\n            <List sx={{ display: 'flex' }}>\r\n              {rightLinks.map(({ title, path }) => (\r\n                <ListItem component={NavLink} to={path} key={path} sx={navStyles}>\r\n                  {title.toUpperCase()}\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import { Button, Container, Divider, Paper, Typography, Box } from \"@mui/material\"\r\nimport React from 'react'\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory()\r\n    const {state} = useLocation<any>()\r\n    return (\r\n        <Container component={Paper}>\r\n            {state.error && state.error ? (\r\n                <Box>\r\n                <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                <Divider />\r\n                <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </Box>\r\n            ) :\r\n            <Typography variant='h5' gutterBottom>Server error</Typography>\r\n        \r\n    }\r\n    <Button onClick={() => history.push('/catalog')}> Go back to the store </Button>\r\n    </Container>\r\n    )\r\n}","import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from '@mui/material'\r\nimport React from 'react'\r\nimport { useAppSelector } from '../../app/store/configureStore'\r\nimport { currencyFormat } from '../../app/util/util'\r\n\r\ninterface props {\r\n  subtotal?: number\r\n}\r\n\r\nexport default function BasketSummary({subtotal}: props) {\r\n  const { basket } = useAppSelector(state => state.basket)\r\n  if (subtotal === null || subtotal === undefined)\r\n    subtotal = basket?.items.reduce((sum, item) => sum + item.quantity * item.price, 0) ?? 0\r\n  const deliveryFee = subtotal > 10000 ? 0 : 500\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper} variant={'outlined'}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Subtotal</TableCell>\r\n              <TableCell align='right'>{currencyFormat(subtotal)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n              <TableCell align='right'>{currencyFormat(deliveryFee)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Total</TableCell>\r\n              <TableCell align='right'>{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>\r\n                <span style={{ fontStyle: 'italic' }}>\r\n                  *Orders over $100 qualify for free delivery\r\n                </span>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  )\r\n}\r\n","import { Remove, Add, Delete } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Box,\r\n} from '@mui/material'\r\nimport * as React from 'react'\r\nimport { BasketItem } from '../../app/models/basket'\r\nimport { useAppSelector, useAppDispatch } from '../../app/store/configureStore'\r\nimport { currencyFormat } from '../../app/util/util'\r\nimport { removeBasketItemAsync, addBasketItemAsync } from './basketSlice'\r\n\r\ninterface Props {\r\n  items: BasketItem[]\r\n  isBasket?: boolean\r\n}\r\n\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n  const { status } = useAppSelector((state) => state.basket)\r\n  const dispatch = useAppDispatch()\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Product</TableCell>\r\n            <TableCell align='right'>Price</TableCell>\r\n            <TableCell align='center'>Quantity</TableCell>\r\n            <TableCell align='right'>Subtotal</TableCell>\r\n            {isBasket && <TableCell align='right'></TableCell>}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {items.map((item) => (\r\n            <TableRow\r\n              key={item.productId}\r\n              sx={{\r\n                '&:last-child td, &:last-child th': {\r\n                  border: 0,\r\n                },\r\n              }}\r\n            >\r\n              <TableCell component='th' scope='row'>\r\n                <Box display='flex' alignItems='center'>\r\n                  <img\r\n                    src={item.pictureUrl}\r\n                    alt={item.name}\r\n                    style={{\r\n                      height: 50,\r\n                      marginRight: 20,\r\n                    }}\r\n                  />\r\n                  <span>{item.name}</span>\r\n                </Box>\r\n              </TableCell>\r\n              <TableCell align='right'>{currencyFormat(item.price)}</TableCell>\r\n              <TableCell align='center'>\r\n                {isBasket && (\r\n                  <LoadingButton\r\n                    loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                    color='error'\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        removeBasketItemAsync({\r\n                          productId: item.productId,\r\n                          quantity: 1,\r\n                          name: 'rem',\r\n                        }),\r\n                      )\r\n                    }\r\n                  >\r\n                    <Remove />\r\n                  </LoadingButton>\r\n                )}\r\n                {item.quantity}\r\n                {isBasket && (\r\n                  <LoadingButton\r\n                    loading={status === 'pendingAddItem' + item.productId}\r\n                    color='secondary'\r\n                    onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                  >\r\n                    <Add />\r\n                  </LoadingButton>\r\n                )}\r\n              </TableCell>\r\n              <TableCell align='right'>{currencyFormat(item.price * item.quantity)}</TableCell>\r\n              {isBasket && (\r\n                <TableCell align='right'>\r\n                  <LoadingButton\r\n                    loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                    color='error'\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        removeBasketItemAsync({\r\n                          productId: item.productId,\r\n                          quantity: item.quantity,\r\n                          name: 'del',\r\n                        }),\r\n                      )\r\n                    }\r\n                  >\r\n                    <Delete />\r\n                  </LoadingButton>\r\n                </TableCell>\r\n              )}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","import {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAppSelector } from '../../app/store/configureStore'\r\nimport BasketSummary from './BasketSummary'\r\nimport BasketTable from './BasketTable'\r\n\r\nexport default function BasketPage() {\r\n  const { basket } = useAppSelector(state => state.basket)\r\n\r\n  if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\r\n\r\n  return (\r\n    <>\r\n    <BasketTable items={basket.items} />\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n          <Button component={Link} to='/checkout' variant='contained' size='large' fullWidth>\r\n            Checkout\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { FieldValues } from 'react-hook-form/dist/types';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\n\r\nexport default function Login() {\r\n  const history = useHistory()\r\n  const location = useLocation<any>()\r\n  const dispatch = useAppDispatch()\r\n  const {register, handleSubmit, formState: {isSubmitting, errors, isValid}} = useForm({\r\n    mode: 'onTouched'\r\n  })\r\n\r\n  async function submitForm(data: FieldValues) {\r\n    try {\r\n      await dispatch(signInUser(data))\r\n      history.push(location.state?.from?.pathname || '/catalog')\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n      <Container component={Paper} maxWidth=\"sm\" sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Username\"\r\n              autoFocus\r\n              {...register('username', {required: 'Username is required'})}\r\n              error={!!errors.username}\r\n              helperText={errors?.username?.message as string}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              {...register('password', {required: 'Password is required'})}\r\n              error={!!errors.password}\r\n              helperText={errors?.password?.message as string}\r\n            />\r\n            <LoadingButton\r\n              disabled={!isValid}\r\n              loading={isSubmitting}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </LoadingButton>\r\n            <Grid container>\r\n                <Link to=\"/register\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n          </Box>\r\n      </Container>\r\n  );\r\n}","import * as React from 'react'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport TextField from '@mui/material/TextField'\r\nimport Grid from '@mui/material/Grid'\r\nimport Box from '@mui/material/Box'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Container from '@mui/material/Container'\r\nimport { Paper } from '@mui/material'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport agent from '../../app/api/agent'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport default function Register() {\r\n  const history = useHistory()\r\n  const {\r\n    register,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors, isValid },\r\n  } = useForm({\r\n    mode: 'all',\r\n  })\r\n\r\n  function handleApiErrors(errors: any) {\r\n    console.log(errors)\r\n    if (errors) {\r\n      errors.forEach((error: string) => {\r\n        if (error.includes('Password')) {\r\n          setError('password', { message: error })\r\n        } else if (error.includes('Email')) {\r\n          setError('email', { message: error })\r\n        } else if (error.includes('Username')) {\r\n          setError('username', { message: error })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      component={Paper}\r\n      maxWidth='sm'\r\n      sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}\r\n    >\r\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component='h1' variant='h5'>\r\n        Register\r\n      </Typography>\r\n      <Box\r\n        component='form'\r\n        onSubmit={handleSubmit((data) =>\r\n          agent.Account.register(data)\r\n          .then(() => {\r\n            toast.success('Registration successful - you can now login')\r\n            history.push('/login')\r\n          })\r\n          .catch((error) => handleApiErrors(error)),\r\n        )}\r\n        noValidate\r\n        sx={{ mt: 1 }}\r\n      >\r\n        <TextField\r\n          margin='normal'\r\n          fullWidth\r\n          label='Username'\r\n          autoFocus\r\n          {...register('username', { required: 'Username is required' })}\r\n          error={!!errors.username}\r\n          helperText={errors?.username?.message as string}\r\n        />\r\n        <TextField\r\n          margin='normal'\r\n          fullWidth\r\n          label='Email address'\r\n          {...register('email', {\r\n            pattern: {\r\n              value: /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n              message: 'Not a valid email address',\r\n            },\r\n            required: 'Email is required',\r\n          })}\r\n          error={!!errors.email}\r\n          helperText={errors?.email?.message as string}\r\n        />\r\n        <TextField\r\n          margin='normal'\r\n          fullWidth\r\n          label='Password'\r\n          type='password'\r\n          {...register('password', {\r\n            pattern: {\r\n              value:\r\n                /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n              message: 'Not a valid password',\r\n            },\r\n            required: 'Password is required',\r\n          })}\r\n          error={!!errors.password}\r\n          helperText={errors?.password?.message as string}\r\n        />\r\n\r\n        <LoadingButton\r\n          disabled={!isValid}\r\n          loading={isSubmitting}\r\n          type='submit'\r\n          fullWidth\r\n          variant='contained'\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Register\r\n        </LoadingButton>\r\n        <Grid container>\r\n          <Link to='/login'>{'Already have an account? Sign In'}</Link>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { ComponentType } from 'react'\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router-dom';\r\nimport { useAppSelector } from '../store/configureStore';\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n    const {user} = useAppSelector(state => state.account)\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={ props  =>\r\n          user ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }","import { Box, Button, Grid, Typography } from '@mui/material'\r\nimport * as React from 'react'\r\nimport { BasketItem } from '../../app/models/basket'\r\nimport { Order } from '../../app/models/order'\r\nimport BasketSummary from '../basket/BasketSummary'\r\nimport BasketTable from '../basket/BasketTable'\r\n\r\ninterface Props {\r\n    order: Order\r\n    setSelectedOrder: (id: number) => void\r\n}\r\n\r\nexport default function OrderDetails({order, setSelectedOrder}: Props) {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + item.quantity * item.price, 0) ?? 0\r\n\r\n    return (\r\n        <>\r\n        <Box display='flex' justifyContent='space-between' />\r\n            <Typography sx={{p: 2}} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n            <Button onClick={() => setSelectedOrder(0)} sx= {{m: 2}} size='large' variant='contained'>Back to orders</Button>\r\n        <Box/>\r\n        <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n        <Grid container>\r\n            <Grid item xs={6} />\r\n            <Grid item xs={6} /> \r\n            <BasketSummary subtotal={subtotal} />\r\n        </Grid>\r\n        </>\r\n    )\r\n}","import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n} from '@mui/material'\r\nimport * as React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport agent from '../../app/api/agent'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { Order } from '../../app/models/order'\r\nimport { currencyFormat } from '../../app/util/util'\r\nimport OrderDetails from './OrderDetails'\r\n\r\nexport default function Orders() {\r\n  const [orders, setOrders] = useState<Order[] | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [selectedOrderNumber, setSelectedOrderNumber] = useState(0)\r\n\r\n  useEffect(() => {\r\n    agent.Orders.list()\r\n      .then((orders) => setOrders(orders))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setLoading(false))\r\n  })\r\n\r\n  if (loading) return <LoadingComponent message='Loading orders' />\r\n\r\n  if(selectedOrderNumber > 0 ) return (\r\n    <OrderDetails order={orders?.find(o => o.id === selectedOrderNumber)!} setSelectedOrder={setSelectedOrderNumber}/>\r\n  )\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Order number</TableCell>\r\n            <TableCell align='right'>total</TableCell>\r\n            <TableCell align='right'>Order Date</TableCell>\r\n            <TableCell align='right'>Order status</TableCell>\r\n            <TableCell align='right'></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders?.map((order) => (\r\n            <TableRow key={order.id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n              <TableCell component='th' scope='row'>\r\n                {order.id}\r\n              </TableCell>\r\n              <TableCell align='right'>{currencyFormat(order.total)}</TableCell>\r\n              <TableCell align='right'>{order.orderDate.split('T')[0]}</TableCell>\r\n              <TableCell align='right'>{order.orderStatus}</TableCell>\r\n              <TableCell align='right'>\r\n                <Button onClick={() => setSelectedOrderNumber(order.id)}>View</Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","import { TextField } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const {fieldState, field} = useController({\r\n        ...props, \r\n        defaultValue: ''\r\n    })\r\n\r\n    return (\r\n        <TextField \r\n        {...props}\r\n        {...field}\r\n        fullWidth\r\n        variant='outlined'\r\n        error={!!fieldState.error}\r\n        helperText={fieldState.error?.message}\r\n        />\r\n    )\r\n}","import { Checkbox, FormControlLabel } from '@mui/material';\r\nimport * as React from 'react'\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string\r\n    disabled: boolean\r\n}\r\n\r\nexport default function AppCheckBox(props: Props) {\r\n    const {field} = useController({...props, defaultValue: false})\r\n\r\n    return (\r\n        <FormControlLabel \r\n            control={\r\n                <Checkbox \r\n                {...field}\r\n                checked={field.value}\r\n                disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n}","import Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport React from 'react'\r\nimport { useFormContext } from 'react-hook-form'\r\nimport AppTextInput from '../../app/components/AppTextInput'\r\nimport AppCheckBox from '../../app/components/AppCheckBox'\r\n\r\nexport default function AddressForm() {\r\n  const { control, formState } = useFormContext()\r\n  return (\r\n    <>\r\n      <Typography variant='h6' gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n          <AppTextInput control={control} name='fullName' label='Full name' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}></Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput control={control} name='address1' label='Address 1' />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput control={control} name='address2' label='Address 2' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='city' label='City' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='state' label='State' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='zip' label='Zipcode' />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name='country' label='Country' />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppCheckBox\r\n            name='saveAddress'\r\n            label='Save this as the default address'\r\n            disabled={!formState.isDirty}\r\n            control={control}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import { InputBaseComponentProps } from '@mui/material'\r\nimport React, { useImperativeHandle } from 'react'\r\nimport { forwardRef, Ref, useRef } from 'react'\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput(\r\n  { component: Component, ...props }: Props,\r\n  ref: Ref<unknown>,\r\n) {\r\n  const elementRef = useRef<any>()\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    focus: () => elementRef.current.focus(),\r\n  }))\r\n\r\n  return <Component onReady={(element: any) => (elementRef.current = element)} {...props} />\r\n})\r\n","import Typography from '@mui/material/Typography'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport React from 'react'\r\nimport AppTextInput from '../../app/components/AppTextInput'\r\nimport { useFormContext } from 'react-hook-form'\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js'\r\nimport { StripeInput } from './StripeInput'\r\nimport { StripeElementType } from '@stripe/stripe-js'\r\n\r\ninterface Props {\r\n  cardState: {\r\n    elementError: { [key in StripeElementType]?: string }\r\n  }\r\n  onCardInputChange: (event: any) => void\r\n}\r\n\r\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\r\n  const { control } = useFormContext()\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='h6' gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            id='cardNumber'\r\n            label='Card number'\r\n            fullWidth\r\n            autoComplete='cc-number'\r\n            variant='outlined'\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id='expDate'\r\n            label='Expiry date'\r\n            fullWidth\r\n            autoComplete='cc-exp'\r\n            variant='outlined'\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id='cvv'\r\n            label='CVV'\r\n            fullWidth\r\n            autoComplete='cc-csc'\r\n            variant='outlined'\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Grid } from '@mui/material'\r\nimport BasketSummary from '../basket/BasketSummary'\r\nimport { useAppSelector } from '../../app/store/configureStore'\r\nimport BasketTable from '../basket/BasketTable'\r\n\r\nexport default function Review() {\r\n  const { basket } = useAppSelector((state) => state.basket)\r\n  return (\r\n    <>\r\n      <Typography variant='h6' gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket && <BasketTable items={basket.items} isBasket={false} />}\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import * as yup from 'yup'\r\n\r\nexport const validationSchema = [\r\n    \r\n  yup.object({\r\n    fullName: yup.string().required('Full name is required'),\r\n    address1: yup.string().required('Adress line 1 is required'),\r\n    address2: yup.string().required(),\r\n    city: yup.string().required(),\r\n    state: yup.string().required(),\r\n    zip: yup.string().required(),\r\n    country: yup.string().required(),\r\n  }),\r\n\r\n  yup.object(),\r\n\r\n  yup.object({\r\n    nameOnCard: yup.string().required(),\r\n  }),\r\n  \r\n]\r\n","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from '@mui/material'\r\nimport { useEffect, useState } from 'react'\r\nimport AddressForm from './AddressForm'\r\nimport PaymentForm from './PaymentForm'\r\nimport Review from './Review'\r\nimport React from 'react'\r\nimport { FieldValues, FormProvider, useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { validationSchema } from './checkoutValidation'\r\nimport agent from '../../app/api/agent'\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore'\r\nimport { clearBasket } from '../basket/basketSlice'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { StripeElementType } from '@stripe/stripe-js'\r\nimport { CardNumberElement, useElements, useStripe } from '@stripe/react-stripe-js'\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details']\r\n\r\nexport default function CheckoutPage() {\r\n  const [activeStep, setActiveStep] = useState(0)\r\n  const [orderNumber, setOrderNumber] = useState(0)\r\n  const [loading, setLoading] = useState(false)\r\n  const dispatch = useAppDispatch()\r\n  const [cardState, setCardState] = useState<{\r\n    elementError: { [key in StripeElementType]?: string }\r\n  }>({ elementError: {} })\r\n  const [cardComplete, setCardComplete] = useState({\r\n    cardNumber: false,\r\n    cardExpiry: false,\r\n    cardCvc: false,\r\n  })\r\n  const [paymentMessage, setPaymentMessage] = useState('')\r\n  const [paymentSucceeded, setPaymentSucceeded] = useState(false)\r\n  const { basket } = useAppSelector((state) => state.basket)\r\n  const stripe = useStripe()\r\n  const elements = useElements()\r\n\r\n  function onCardInputchange(event: any) {\r\n    setCardState({\r\n      ...cardState,\r\n      elementError: {\r\n        ...cardState.elementError,\r\n        [event.elementType]: event.error?.message,\r\n      },\r\n    })\r\n\r\n    setCardComplete({ ...cardComplete, [event.elementType]: event.complete })\r\n  }\r\n\r\n  function getStepContent(step: number) {\r\n    switch (step) {\r\n      case 0:\r\n        return <AddressForm />\r\n      case 1:\r\n        return <Review />\r\n      case 2:\r\n        return <PaymentForm cardState={cardState} onCardInputChange={onCardInputchange} />\r\n      default:\r\n        throw new Error('Unknown step')\r\n    }\r\n  }\r\n\r\n  const currentValidationSchema = validationSchema[activeStep]\r\n\r\n  const methods = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver(currentValidationSchema),\r\n  })\r\n\r\n  useEffect(() => {\r\n    agent.Account.fetchAddress().then((response) => {\r\n      if (response) {\r\n        methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\r\n      }\r\n    })\r\n  }, [methods])\r\n\r\n  async function submitOrder(data: FieldValues) {\r\n    setLoading(true)\r\n    const { nameOnCard, saveAddress, ...shippingAddress } = data\r\n    if (!stripe || !elements) return\r\n      //stripe is not ready\r\n      try {\r\n        const cardElement = elements?.getElement(CardNumberElement)\r\n        const paymentResult = await stripe?.confirmCardPayment(basket?.clientSecret!, {\r\n          payment_method: {\r\n            card: cardElement!,\r\n            billing_details: {\r\n              name: nameOnCard,\r\n            },\r\n          },\r\n        })\r\n        console.log(paymentResult)\r\n        if (paymentResult?.paymentIntent?.status === 'succeeded') {\r\n          const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress })\r\n          setOrderNumber(orderNumber)\r\n          setPaymentSucceeded(true)\r\n          setPaymentMessage('Thank you - we have received your payment')\r\n          setActiveStep(activeStep + 1)\r\n          dispatch(clearBasket())\r\n          setLoading(false)\r\n        } else {\r\n          setPaymentMessage(paymentResult?.error?.message!)\r\n          setPaymentSucceeded(false)\r\n          setLoading(false)\r\n          setActiveStep(activeStep + 1)\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n        setLoading(false)\r\n      }\r\n  }\r\n\r\n  const handleNext = async (data: FieldValues) => {\r\n    if (activeStep === steps.length - 1) {\r\n      await submitOrder(data)\r\n    } else {\r\n      setActiveStep(activeStep + 1)\r\n    }\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1)\r\n  }\r\n\r\n  function submitDisabled(): boolean {\r\n    if (activeStep === steps.length - 1) {\r\n      return (\r\n        !cardComplete.cardCvc ||\r\n        !cardComplete.cardExpiry ||\r\n        !cardComplete.cardNumber ||\r\n        !methods.formState.isValid\r\n      )\r\n    } else {\r\n      return !methods.formState.isValid\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Paper variant='outlined' sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n        <Typography component='h1' variant='h4' align='center'>\r\n          Checkout\r\n        </Typography>\r\n        <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n          {activeStep === steps.length ? (\r\n            <>\r\n              <Typography variant='h5' gutterBottom>\r\n                {paymentMessage}\r\n              </Typography>\r\n              {paymentSucceeded ? (\r\n                <Typography variant='subtitle1'>\r\n                  Your order number is #{orderNumber}. We have not emailed your order confirmation,\r\n                  and will not send you an update when your order has shipped, fakestore!\r\n                </Typography>\r\n              ) : (\r\n                <Button variant='contained' onClick={handleBack}>\r\n                  Go back and try again\r\n                </Button>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {getStepContent(activeStep)}\r\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                {activeStep !== 0 && (\r\n                  <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n                <LoadingButton\r\n                  loading={loading}\r\n                  disabled={submitDisabled()}\r\n                  variant='contained'\r\n                  type='submit'\r\n                  sx={{ mt: 3, ml: 1 }}\r\n                >\r\n                  {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                </LoadingButton>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </form>\r\n      </Paper>\r\n    </FormProvider>\r\n  )\r\n}\r\n","import { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport * as React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport agent from '../../app/api/agent'\r\nimport LoadingComponent from '../../app/layout/LoadingComponent'\r\nimport { useAppDispatch } from '../../app/store/configureStore'\r\nimport { setBasket } from '../basket/basketSlice'\r\nimport CheckoutPage from './CheckOutPage'\r\n\r\nconst stripePromise = loadStripe(\r\n  'pk_test_51MX6rJEP2FAJR8soQgZo57KS7wklWRNaBzluWWud8XybhTJsgI0pL69OYAoXCCVwEe1H9UrEvg5Tp1MCm0XdBtCf00CaWltWtJ',\r\n)\r\n\r\nexport default function CheckoutWrapper() {\r\n  const dispatch = useAppDispatch()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    agent.Payments.createPaymentIntent()\r\n      .then((basket) => dispatch(setBasket(basket)))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setLoading(false))\r\n  }, [dispatch])\r\n\r\n  if (loading) return <LoadingComponent message='Loading checkout...' />\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <CheckoutPage />\r\n    </Elements>\r\n  )\r\n}\r\n","import { Container, createTheme, CssBaseline } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport ContactPage from \"../../features/contacts/ContactPage\";\nimport HomePage from \"../../features/home/HomePage\";\nimport Header from \"./Header\";\nimport React from 'react'\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../errors/ServerError\";\nimport NotFound from \"../errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\n\nfunction App() {\n  const dispatch = useAppDispatch()\n  const [loading, setLoading] = useState(true)\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser())\n      await dispatch(fetchBasketAsync())\n    }\n    catch (error) {\n      console.log(error)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false))\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false)\n  const theme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light',\n      background: {\n        default: darkMode ? '#121212' : '#eaeaea'\n      }\n    }\n  })\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode)\n  }\n\n  if (loading) return <LoadingComponent message='Initialising app...' />\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position=\"bottom-right\" hideProgressBar/>\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange}/>\n      <Route exact path='/' component={HomePage}/>\n      <Route path={'/(.+)'} render={() => (\n        <Container sx={{mt: 4}}>\n        <Switch>\n        <Route exact path='/catalog' component={Catalog}/>\n        <Route path='/catalog/:id' component={ProductDetails}/>\n        <Route path='/about' component={AboutPage}/>\n        <Route path='/contact' component={ContactPage}/>\n        <Route path='/server-error' component={ServerError}/>\n        <Route path='/basket' component={BasketPage} />\n        <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n        <PrivateRoute path='/orders' component={Orders} />\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <Route component={NotFound}/>\n        </Switch>\n      </Container>\n      )} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store/configureStore\";\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nexport const history = createBrowserHistory();\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\n\nroot.render(\n  <Router history={history}>\n        <Provider store={store}>\n        <App />\n        </Provider>\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}